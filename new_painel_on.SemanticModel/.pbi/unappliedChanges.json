{
  "version": "1.0",
  "conceptualSchemaSettings": {},
  "queries": [
    {
      "name": "packed",
      "lineageTag": "90624690-4c0a-4216-b6de-534f5b91cf63",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Packed - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Packed - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Arquivos Ocultos Filtrados1\" = Table.SelectRows(#\"Packed - ADMs - Vinicius & Almeida\", each [Attributes]?[Hidden]? <> true),",
        "    #\"Invocar Função Personalizada1\" = Table.AddColumn(#\"Arquivos Ocultos Filtrados1\", \"Transformar Arquivo\", each #\"Transformar Arquivo\"([Content])),",
        "    #\"Colunas Renomeadas1\" = Table.RenameColumns(#\"Invocar Função Personalizada1\", {\"Name\", \"Nome da Origem\"}),",
        "    #\"Outras Colunas Removidas1\" = Table.SelectColumns(#\"Colunas Renomeadas1\", {\"Nome da Origem\", \"Transformar Arquivo\"}),",
        "    #\"Coluna de Tabela Expandida1\" = Table.ExpandTableColumn(#\"Outras Colunas Removidas1\", \"Transformar Arquivo\", Table.ColumnNames(#\"Transformar Arquivo\"(#\"Arquivo de Amostra\"))),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(#\"Coluna de Tabela Expandida1\",{{\"Nome da Origem\", type text}, {\"Filial\", Int64.Type}, {\"Inventory Type ID\", Int64.Type}, {\"OLPN\", Int64.Type}, {\"Pedido\", Int64.Type}, {\"Pallet\", Int64.Type}, {\"Item\", Int64.Type}, {\"Descrição item\", type text}, {\"Setor\", type text}, {\"Tipo Pedido\", type text}, {\"Data Pedido\", type datetime}, {\"Data Packed\", type datetime}, {\"Usuário\", type text}, {\"Nome do Usuário\", type text}, {\"Shipment\", Int64.Type}, {\"Quantidade\", Int64.Type}, {\"Pedido venda\", Int64.Type}, {\"Nota Fiscal\", Int64.Type}, {\"BOX\", Int64.Type}, {\"Embala\", type text}}),",
        "    #\"Colunas Removidas\" = Table.RemoveColumns(#\"Tipo Alterado\",{\"Nome da Origem\"}),",
        "    #\"Colunas Reordenadas\" = Table.ReorderColumns(#\"Colunas Removidas\",{\"Filial\", \"OLPN\", \"Pedido\", \"Pallet\", \"Inventory Type ID\", \"Item\", \"Descrição item\", \"Setor\", \"Tipo Pedido\", \"Usuário\", \"Nome do Usuário\", \"Shipment\", \"Quantidade\", \"Pedido venda\", \"Nota Fiscal\", \"BOX\", \"Embala\", \"Data Pedido\", \"Data Packed\"}),",
        "    #\"Início da Hora Inserido\" = Table.AddColumn(#\"Colunas Reordenadas\", \"Início da Hora\", each Time.StartOfHour([Data Pedido]), type datetime),",
        "    #\"Horário Extraído\" = Table.TransformColumns(#\"Início da Hora Inserido\",{{\"Início da Hora\", DateTime.Time, type time}}),",
        "    #\"Colunas Renomeadas\" = Table.RenameColumns(#\"Horário Extraído\",{{\"Início da Hora\", \"hora_pedido\"}}),",
        "    #\"Colunas Reordenadas1\" = Table.ReorderColumns(#\"Colunas Renomeadas\",{\"Filial\", \"OLPN\", \"Pedido\", \"Pallet\", \"Inventory Type ID\", \"Item\", \"Descrição item\", \"Setor\", \"Tipo Pedido\", \"Usuário\", \"Nome do Usuário\", \"Shipment\", \"Quantidade\", \"Pedido venda\", \"Nota Fiscal\", \"BOX\", \"Embala\", \"Data Pedido\", \"hora_pedido\", \"Data Packed\"}),",
        "    #\"Data Extraída\" = Table.TransformColumns(#\"Colunas Reordenadas1\",{{\"Data Pedido\", DateTime.Date, type date}}),",
        "    #\"Início da Hora Inserido1\" = Table.AddColumn(#\"Data Extraída\", \"Início da Hora\", each Time.StartOfHour([Data Packed]), type datetime),",
        "    #\"Horário Extraído1\" = Table.TransformColumns(#\"Início da Hora Inserido1\",{{\"Início da Hora\", DateTime.Time, type time}}),",
        "    #\"Colunas Renomeadas2\" = Table.RenameColumns(#\"Horário Extraído1\",{{\"Início da Hora\", \"hora_packed\"}}),",
        "    #\"Data Extraída1\" = Table.TransformColumns(#\"Colunas Renomeadas2\",{{\"Data Packed\", DateTime.Date, type date}}),",
        "    #\"Colunas Removidas1\" = Table.RemoveColumns(#\"Data Extraída1\",{\"hora_pedido\"})",
        "in",
        "    #\"Colunas Removidas1\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = SharePoint.Contents(\\\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\\\", [ApiVersion = 15]),\\n    #\\\"Atualizaes de Relatrios Gerais\\\" = Fonte{[Name=\\\"Atualizaes de Relatrios Gerais\\\"]}[Content],\\n    #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\" = #\\\"Atualizaes de Relatrios Gerais\\\"{[Name=\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Relatórios rotativos\\\" = #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Relatórios rotativos\\\"]}[Content],\\n    #\\\"Painel Online - ADMs - Vinicius & Almeida\\\" = #\\\"Relatórios rotativos\\\"{[Name=\\\"Painel Online - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Packed - ADMs - Vinicius & Almeida\\\" = #\\\"Painel Online - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Packed - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Arquivos Ocultos Filtrados1\\\" = Table.SelectRows(#\\\"Packed - ADMs - Vinicius & Almeida\\\", each [Attributes]?[Hidden]? <> true),\\n    #\\\"Invocar Função Personalizada1\\\" = Table.AddColumn(#\\\"Arquivos Ocultos Filtrados1\\\", \\\"Transformar Arquivo\\\", each #\\\"Transformar Arquivo\\\"([Content])),\\n    #\\\"Colunas Renomeadas1\\\" = Table.RenameColumns(#\\\"Invocar Função Personalizada1\\\", {\\\"Name\\\", \\\"Nome da Origem\\\"}),\\n    #\\\"Outras Colunas Removidas1\\\" = Table.SelectColumns(#\\\"Colunas Renomeadas1\\\", {\\\"Nome da Origem\\\", \\\"Transformar Arquivo\\\"}),\\n    #\\\"Coluna de Tabela Expandida1\\\" = Table.ExpandTableColumn(#\\\"Outras Colunas Removidas1\\\", \\\"Transformar Arquivo\\\", Table.ColumnNames(#\\\"Transformar Arquivo\\\"(#\\\"Arquivo de Amostra\\\"))),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(#\\\"Coluna de Tabela Expandida1\\\",{{\\\"Nome da Origem\\\", type text}, {\\\"Filial\\\", Int64.Type}, {\\\"Inventory Type ID\\\", Int64.Type}, {\\\"OLPN\\\", Int64.Type}, {\\\"Pedido\\\", Int64.Type}, {\\\"Pallet\\\", Int64.Type}, {\\\"Item\\\", Int64.Type}, {\\\"Descrição item\\\", type text}, {\\\"Setor\\\", type text}, {\\\"Tipo Pedido\\\", type text}, {\\\"Data Pedido\\\", type datetime}, {\\\"Data Packed\\\", type datetime}, {\\\"Usuário\\\", type text}, {\\\"Nome do Usuário\\\", type text}, {\\\"Shipment\\\", Int64.Type}, {\\\"Quantidade\\\", Int64.Type}, {\\\"Pedido venda\\\", Int64.Type}, {\\\"Nota Fiscal\\\", Int64.Type}, {\\\"BOX\\\", Int64.Type}, {\\\"Embala\\\", type text}}),\\n    #\\\"Colunas Removidas\\\" = Table.RemoveColumns(#\\\"Tipo Alterado\\\",{\\\"Nome da Origem\\\"}),\\n    #\\\"Colunas Reordenadas\\\" = Table.ReorderColumns(#\\\"Colunas Removidas\\\",{\\\"Filial\\\", \\\"OLPN\\\", \\\"Pedido\\\", \\\"Pallet\\\", \\\"Inventory Type ID\\\", \\\"Item\\\", \\\"Descrição item\\\", \\\"Setor\\\", \\\"Tipo Pedido\\\", \\\"Usuário\\\", \\\"Nome do Usuário\\\", \\\"Shipment\\\", \\\"Quantidade\\\", \\\"Pedido venda\\\", \\\"Nota Fiscal\\\", \\\"BOX\\\", \\\"Embala\\\", \\\"Data Pedido\\\", \\\"Data Packed\\\"}),\\n    #\\\"Início da Hora Inserido\\\" = Table.AddColumn(#\\\"Colunas Reordenadas\\\", \\\"Início da Hora\\\", each Time.StartOfHour([Data Pedido]), type datetime),\\n    #\\\"Horário Extraído\\\" = Table.TransformColumns(#\\\"Início da Hora Inserido\\\",{{\\\"Início da Hora\\\", DateTime.Time, type time}}),\\n    #\\\"Colunas Renomeadas\\\" = Table.RenameColumns(#\\\"Horário Extraído\\\",{{\\\"Início da Hora\\\", \\\"hora_pedido\\\"}}),\\n    #\\\"Colunas Reordenadas1\\\" = Table.ReorderColumns(#\\\"Colunas Renomeadas\\\",{\\\"Filial\\\", \\\"OLPN\\\", \\\"Pedido\\\", \\\"Pallet\\\", \\\"Inventory Type ID\\\", \\\"Item\\\", \\\"Descrição item\\\", \\\"Setor\\\", \\\"Tipo Pedido\\\", \\\"Usuário\\\", \\\"Nome do Usuário\\\", \\\"Shipment\\\", \\\"Quantidade\\\", \\\"Pedido venda\\\", \\\"Nota Fiscal\\\", \\\"BOX\\\", \\\"Embala\\\", \\\"Data Pedido\\\", \\\"hora_pedido\\\", \\\"Data Packed\\\"}),\\n    #\\\"Data Extraída\\\" = Table.TransformColumns(#\\\"Colunas Reordenadas1\\\",{{\\\"Data Pedido\\\", DateTime.Date, type date}}),\\n    #\\\"Início da Hora Inserido1\\\" = Table.AddColumn(#\\\"Data Extraída\\\", \\\"Início da Hora\\\", each Time.StartOfHour([Data Packed]), type datetime),\\n    #\\\"Horário Extraído1\\\" = Table.TransformColumns(#\\\"Início da Hora Inserido1\\\",{{\\\"Início da Hora\\\", DateTime.Time, type time}}),\\n    #\\\"Colunas Renomeadas2\\\" = Table.RenameColumns(#\\\"Horário Extraído1\\\",{{\\\"Início da Hora\\\", \\\"hora_packed\\\"}}),\\n    #\\\"Data Extraída1\\\" = Table.TransformColumns(#\\\"Colunas Renomeadas2\\\",{{\\\"Data Packed\\\", DateTime.Date, type date}}),\\n    #\\\"Colunas Removidas1\\\" = Table.RemoveColumns(#\\\"Data Extraída1\\\",{\\\"hora_pedido\\\"})\\nin\\n    #\\\"Colunas Removidas1\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "dHora",
      "lineageTag": "cd46b015-e069-4c00-aac6-134ce44bcc76",
      "text": [
        "let",
        "    Lista = {0..86399},",
        "    ConverteParaTabela = Table.FromList(Lista, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
        "    AlteraTipo = Table.TransformColumnTypes(ConverteParaTabela,{{\"Column1\", Int64.Type}}),",
        "    AlteraNomeCol = Table.RenameColumns(AlteraTipo,{{\"Column1\",\"Segundo\"}}),",
        "    ColDuracao = Table.AddColumn(AlteraNomeCol,\"Duração\", each #duration(0,0,0,[Segundo]), type duration),",
        "    ColHora = Table.AddColumn(ColDuracao,\"Hora\", each #time(Duration.Hours([Duração]), Duration.Minutes([Duração]), Duration.Seconds([Duração]))),",
        "    RemoveCols = Table.RemoveColumns(ColHora,{\"Duração\",\"Segundo\"}),",
        "    CollHoraNum = Table.AddColumn(RemoveCols, \"Hora Num\", each Time.Hour([Hora])),",
        "    ColAMPM = Table.AddColumn(CollHoraNum, \"AMPM\", each if [Hora Num] < 12 then \"AM\" else \"PM\", type text),",
        "    ColHoraAMPM = Table.AddColumn(ColAMPM,\"Hora AMPM\", each",
        "        if [Hora Num] = 0 then \"12 AM\"",
        "        else if [Hora Num] >= 1 and [Hora Num] <= 11 then Number.ToText([Hora Num]) & \" AM\"",
        "        else if [Hora Num] = 12 then \"12 PM\"",
        "        else if [Hora Num] >= 13 then Number.ToText([Hora Num] - 12) & \" PM\"",
        "        else \"Unknown\", type text),",
        "    ColPeriodo = Table.AddColumn(ColHoraAMPM,\"Periodo\", each",
        "        if [Hora Num] >= 0 and [Hora Num] <= 5 then \"12AM to 6AM\"",
        "        else if [Hora Num] >= 6 and [Hora Num] <= 11 then \"6AM to 12PM\" ",
        "        else if [Hora Num] >= 12 and [Hora Num] <= 17 then \"12PM to 6PM\"",
        "        else if [Hora Num] >= 18 and [Hora Num] <= 23 then \"6PM to 12AM\"",
        "        else \"Unknown\", type text),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(ColPeriodo,{{\"Hora\", type time}, {\"Hora Num\", Int64.Type}})",
        "in",
        "    #\"Tipo Alterado\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Lista = {0..86399},\\n    ConverteParaTabela = Table.FromList(Lista, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\\n    AlteraTipo = Table.TransformColumnTypes(ConverteParaTabela,{{\\\"Column1\\\", Int64.Type}}),\\n    AlteraNomeCol = Table.RenameColumns(AlteraTipo,{{\\\"Column1\\\",\\\"Segundo\\\"}}),\\n    ColDuracao = Table.AddColumn(AlteraNomeCol,\\\"Duração\\\", each #duration(0,0,0,[Segundo]), type duration),\\n    ColHora = Table.AddColumn(ColDuracao,\\\"Hora\\\", each #time(Duration.Hours([Duração]), Duration.Minutes([Duração]), Duration.Seconds([Duração]))),\\n    RemoveCols = Table.RemoveColumns(ColHora,{\\\"Duração\\\",\\\"Segundo\\\"}),\\n    CollHoraNum = Table.AddColumn(RemoveCols, \\\"Hora Num\\\", each Time.Hour([Hora])),\\n    ColAMPM = Table.AddColumn(CollHoraNum, \\\"AMPM\\\", each if [Hora Num] < 12 then \\\"AM\\\" else \\\"PM\\\", type text),\\n    ColHoraAMPM = Table.AddColumn(ColAMPM,\\\"Hora AMPM\\\", each\\n        if [Hora Num] = 0 then \\\"12 AM\\\"\\n        else if [Hora Num] >= 1 and [Hora Num] <= 11 then Number.ToText([Hora Num]) & \\\" AM\\\"\\n        else if [Hora Num] = 12 then \\\"12 PM\\\"\\n        else if [Hora Num] >= 13 then Number.ToText([Hora Num] - 12) & \\\" PM\\\"\\n        else \\\"Unknown\\\", type text),\\n    ColPeriodo = Table.AddColumn(ColHoraAMPM,\\\"Periodo\\\", each\\n        if [Hora Num] >= 0 and [Hora Num] <= 5 then \\\"12AM to 6AM\\\"\\n        else if [Hora Num] >= 6 and [Hora Num] <= 11 then \\\"6AM to 12PM\\\" \\n        else if [Hora Num] >= 12 and [Hora Num] <= 17 then \\\"12PM to 6PM\\\"\\n        else if [Hora Num] >= 18 and [Hora Num] <= 23 then \\\"6PM to 12AM\\\"\\n        else \\\"Unknown\\\", type text),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(ColPeriodo,{{\\\"Hora\\\", type time}, {\\\"Hora Num\\\", Int64.Type}})\\nin\\n    #\\\"Tipo Alterado\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Parâmetro1",
      "lineageTag": "124ab9b8-fbfa-45aa-b8f0-f9cd7e462435",
      "queryGroupId": "0166ca11-99bc-4848-8374-ab87c01abf62",
      "text": [
        "#\"Arquivo de Amostra\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Arquivo de Amostra\", Type=\"Binary\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Transformar o Arquivo de Exemplo",
      "lineageTag": "15827598-69a4-4580-bdb2-43d566dc5dce",
      "queryGroupId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62",
      "text": [
        "let",
        "    Fonte = Excel.Workbook(Parâmetro1, null, true),",
        "    page_Sheet = Fonte{[Item=\"page\",Kind=\"Sheet\"]}[Data],",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(page_Sheet, [PromoteAllScalars=true])",
        "in",
        "    #\"Cabeçalhos Promovidos\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Arquivo de Amostra",
      "lineageTag": "2c25d927-aa14-40aa-9885-d20a204ec14e",
      "queryGroupId": "0166ca11-99bc-4848-8374-ab87c01abf62",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Packed - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Packed - ADMs - Vinicius & Almeida\"]}[Content],",
        "    Navegação1 = #\"Packed - ADMs - Vinicius & Almeida\"{0}[Content]",
        "in",
        "    Navegação1"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Arquivo de Amostra (2)",
      "lineageTag": "0cd632a1-ff33-476e-a512-98d13f5a7376",
      "queryGroupId": "0166ca11-99bc-4848-8374-ab87c01abf62",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Packed - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Packed - ADMs - Vinicius & Almeida\"]}[Content],",
        "    Navegação1 = #\"Packed - ADMs - Vinicius & Almeida\"{0}[Content]",
        "in",
        "    Navegação1"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Transformar Arquivo (2)",
      "lineageTag": "c1edae16-d66a-4462-856d-72de74559ea6",
      "queryGroupId": "0166ca11-99bc-4848-8374-ab87c01abf62",
      "text": [
        "let",
        "    Fonte = (Parâmetro1) => let",
        "        Fonte = Excel.Workbook(Parâmetro1, null, true),",
        "        page_Sheet = Fonte{[Item=\"page\",Kind=\"Sheet\"]}[Data],",
        "        #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(page_Sheet, [PromoteAllScalars=true])",
        "    in",
        "        #\"Cabeçalhos Promovidos\"",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "Transformar Arquivo",
      "lineageTag": "f77ea6bd-d99d-4942-82af-aecb1ee9c9fc",
      "queryGroupId": "0166ca11-99bc-4848-8374-ab87c01abf62",
      "text": [
        "let",
        "    Fonte = (Parâmetro1 as binary) => let",
        "    Fonte = Excel.Workbook(Parâmetro1, null, true),",
        "    page_Sheet = Fonte{[Item=\"page\",Kind=\"Sheet\"]}[Data],",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(page_Sheet, [PromoteAllScalars=true])",
        "in",
        "    #\"Cabeçalhos Promovidos\"",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "Medidas",
      "lineageTag": "757ab484-96ce-4fc0-8191-dc728c52f7e0",
      "text": [
        "let",
        "    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Coluna 1\" = _t]),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(Fonte,{{\"Coluna 1\", type text}})",
        "in",
        "    #\"Tipo Alterado\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\\\"i44FAA==\\\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\\\"Coluna 1\\\" = _t]),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(Fonte,{{\\\"Coluna 1\\\", type text}})\\nin\\n    #\\\"Tipo Alterado\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "entrada",
      "lineageTag": "142e175f-587a-4fbb-a5cd-6acb29705882",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Entrada - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Entrada - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Arquivos Ocultos Filtrados1\" = Table.SelectRows(#\"Entrada - ADMs - Vinicius & Almeida\", each [Attributes]?[Hidden]? <> true),",
        "    #\"Invocar Função Personalizada1\" = Table.AddColumn(#\"Arquivos Ocultos Filtrados1\", \"Transformar Arquivo (3)\", each #\"Transformar Arquivo (3)\"([Content])),",
        "    #\"Colunas Renomeadas1\" = Table.RenameColumns(#\"Invocar Função Personalizada1\", {\"Name\", \"Nome da Origem\"}),",
        "    #\"Outras Colunas Removidas1\" = Table.SelectColumns(#\"Colunas Renomeadas1\", {\"Nome da Origem\", \"Transformar Arquivo (3)\"}),",
        "    #\"Coluna de Tabela Expandida1\" = Table.ExpandTableColumn(#\"Outras Colunas Removidas1\", \"Transformar Arquivo (3)\", Table.ColumnNames(#\"Transformar Arquivo (3)\"(#\"Arquivo de Amostra (3)\"))),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(#\"Coluna de Tabela Expandida1\",{{\"Nome da Origem\", type text}, {\"CODIGO DA EMPRESA\", Int64.Type}, {\"CODIGO DA FILIAL\", Int64.Type}, {\"HORA DA INTEGRACAO\", type time}, {\"NUMERO DO PEDIDO\", Int64.Type}, {\"CODIGO DA MERCADORIA\", Int64.Type}, {\"DESCRICAO DA MERCADORIA\", type text}, {\"QUANTIDADE DA MERCADORIA\", Int64.Type}, {\"TIPO DE ENTREGA\", type text}, {\"CODIGO DO SETOR\", Int64.Type}, {\"DESCRICAO DO SETOR\", type text}, {\"CODIGO EXPEDICAO\", type text}, {\"TIPO DE EXPEDICAO\", type text}, {\"DATA DE ENTRADA CAIXA\", Int64.Type}, {\"ROTA\", type text}, {\"STATUS PEDIDO\", type text}, {\"TIPO PEDIDO\", type text}, {\"CARGA\", Int64.Type}, {\"                                                                                                                                                                                    \", type any}}),",
        "    #\"Valor Substituído1\" = Table.ReplaceValue(#\"Tipo Alterado\",\".\",\"/\",Replacer.ReplaceText,{\"DATA DE LIMITE\", \"DATA DA INTEGRACAO\"}),",
        "    #\"Tipo Alterado1\" = Table.TransformColumnTypes(#\"Valor Substituído1\",{{\"DATA DE LIMITE\", type date}, {\"DATA DA INTEGRACAO\", type date}}),",
        "    #\"Colunas Removidas\" = Table.RemoveColumns(#\"Tipo Alterado1\",{\"Nome da Origem\", \"                                                                                                                                                                                    \"}),",
        "    #\"Valor Substituído\" = Table.ReplaceValue(#\"Colunas Removidas\",\" \",\"\",Replacer.ReplaceText,{\"ROTA\"}),",
        "    #\"Linhas Filtradas\" = Table.SelectRows(#\"Valor Substituído\", each ([ROTA] = \"SP1989\" or [ROTA] = \"SP2023\"or [ROTA] = \"SP2027\" or [ROTA] = \"SP2856\" or [ROTA] = \"SP2869\" or [ROTA] = \"SP2870\" or [ROTA] = \"SP2871\" or [ROTA] = \"SP2872\" or [ROTA] = \"SP2873\" or [ROTA] = \"SP2874\" or [ROTA] = \"SP2875\" or [ROTA] = \"SP2894\" or [ROTA] = \"SP2895\" or [ROTA] = \"SP2896\" or [ROTA] = \"SP2911\" or [ROTA] = \"SP2937\" or [ROTA] = \"SP2914\" or [ROTA] = \"SP2938\" or [ROTA] = \"SP2916\" or [ROTA] = \"SP2921\" or [ROTA] = \"SP2922\" or [ROTA] = \"SP2923\" or [ROTA] = \"SP2924\")),",
        "    #\"Duplicatas Removidas\" = Table.Distinct(#\"Linhas Filtradas\"),",
        "    #\"Início da Hora Calculado\" = Table.TransformColumns(#\"Duplicatas Removidas\",{{\"HORA DA INTEGRACAO\", Time.StartOfHour, type time}}),",
        "    #\"Colunas Renomeadas\" = Table.RenameColumns(#\"Início da Hora Calculado\",{{\"HORA DA INTEGRACAO\", \"hora_da_integração\"}}),",
        "    #\"Colunas Reordenadas\" = Table.ReorderColumns(#\"Colunas Renomeadas\",{\"CODIGO DA EMPRESA\", \"CODIGO DA FILIAL\", \"DATA DE LIMITE\", \"DATA DA INTEGRACAO\", \"NUMERO DO PEDIDO\", \"CODIGO DA MERCADORIA\", \"DESCRICAO DA MERCADORIA\", \"QUANTIDADE DA MERCADORIA\", \"TIPO DE ENTREGA\", \"CODIGO DO SETOR\", \"DESCRICAO DO SETOR\", \"CODIGO EXPEDICAO\", \"TIPO DE EXPEDICAO\", \"DATA DE ENTRADA CAIXA\", \"ROTA\", \"STATUS PEDIDO\", \"TIPO PEDIDO\", \"CARGA\", \"hora_da_integração\"})",
        "in",
        "    #\"Colunas Reordenadas\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = SharePoint.Contents(\\\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\\\", [ApiVersion = 15]),\\n    #\\\"Atualizaes de Relatrios Gerais\\\" = Fonte{[Name=\\\"Atualizaes de Relatrios Gerais\\\"]}[Content],\\n    #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\" = #\\\"Atualizaes de Relatrios Gerais\\\"{[Name=\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Relatórios rotativos\\\" = #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Relatórios rotativos\\\"]}[Content],\\n    #\\\"Painel Online - ADMs - Vinicius & Almeida\\\" = #\\\"Relatórios rotativos\\\"{[Name=\\\"Painel Online - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Entrada - ADMs - Vinicius & Almeida\\\" = #\\\"Painel Online - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Entrada - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Arquivos Ocultos Filtrados1\\\" = Table.SelectRows(#\\\"Entrada - ADMs - Vinicius & Almeida\\\", each [Attributes]?[Hidden]? <> true),\\n    #\\\"Invocar Função Personalizada1\\\" = Table.AddColumn(#\\\"Arquivos Ocultos Filtrados1\\\", \\\"Transformar Arquivo (3)\\\", each #\\\"Transformar Arquivo (3)\\\"([Content])),\\n    #\\\"Colunas Renomeadas1\\\" = Table.RenameColumns(#\\\"Invocar Função Personalizada1\\\", {\\\"Name\\\", \\\"Nome da Origem\\\"}),\\n    #\\\"Outras Colunas Removidas1\\\" = Table.SelectColumns(#\\\"Colunas Renomeadas1\\\", {\\\"Nome da Origem\\\", \\\"Transformar Arquivo (3)\\\"}),\\n    #\\\"Coluna de Tabela Expandida1\\\" = Table.ExpandTableColumn(#\\\"Outras Colunas Removidas1\\\", \\\"Transformar Arquivo (3)\\\", Table.ColumnNames(#\\\"Transformar Arquivo (3)\\\"(#\\\"Arquivo de Amostra (3)\\\"))),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(#\\\"Coluna de Tabela Expandida1\\\",{{\\\"Nome da Origem\\\", type text}, {\\\"CODIGO DA EMPRESA\\\", Int64.Type}, {\\\"CODIGO DA FILIAL\\\", Int64.Type}, {\\\"HORA DA INTEGRACAO\\\", type time}, {\\\"NUMERO DO PEDIDO\\\", Int64.Type}, {\\\"CODIGO DA MERCADORIA\\\", Int64.Type}, {\\\"DESCRICAO DA MERCADORIA\\\", type text}, {\\\"QUANTIDADE DA MERCADORIA\\\", Int64.Type}, {\\\"TIPO DE ENTREGA\\\", type text}, {\\\"CODIGO DO SETOR\\\", Int64.Type}, {\\\"DESCRICAO DO SETOR\\\", type text}, {\\\"CODIGO EXPEDICAO\\\", type text}, {\\\"TIPO DE EXPEDICAO\\\", type text}, {\\\"DATA DE ENTRADA CAIXA\\\", Int64.Type}, {\\\"ROTA\\\", type text}, {\\\"STATUS PEDIDO\\\", type text}, {\\\"TIPO PEDIDO\\\", type text}, {\\\"CARGA\\\", Int64.Type}, {\\\"                                                                                                                                                                                    \\\", type any}}),\\n    #\\\"Valor Substituído1\\\" = Table.ReplaceValue(#\\\"Tipo Alterado\\\",\\\".\\\",\\\"/\\\",Replacer.ReplaceText,{\\\"DATA DE LIMITE\\\", \\\"DATA DA INTEGRACAO\\\"}),\\n    #\\\"Tipo Alterado1\\\" = Table.TransformColumnTypes(#\\\"Valor Substituído1\\\",{{\\\"DATA DE LIMITE\\\", type date}, {\\\"DATA DA INTEGRACAO\\\", type date}}),\\n    #\\\"Colunas Removidas\\\" = Table.RemoveColumns(#\\\"Tipo Alterado1\\\",{\\\"Nome da Origem\\\", \\\"                                                                                                                                                                                    \\\"}),\\n    #\\\"Valor Substituído\\\" = Table.ReplaceValue(#\\\"Colunas Removidas\\\",\\\" \\\",\\\"\\\",Replacer.ReplaceText,{\\\"ROTA\\\"}),\\n    #\\\"Linhas Filtradas\\\" = Table.SelectRows(#\\\"Valor Substituído\\\", each ([ROTA] = \\\"SP1989\\\" or [ROTA] = \\\"SP2023\\\"or [ROTA] = \\\"SP2027\\\" or [ROTA] = \\\"SP2856\\\" or [ROTA] = \\\"SP2869\\\" or [ROTA] = \\\"SP2870\\\" or [ROTA] = \\\"SP2871\\\" or [ROTA] = \\\"SP2872\\\" or [ROTA] = \\\"SP2873\\\" or [ROTA] = \\\"SP2874\\\" or [ROTA] = \\\"SP2875\\\" or [ROTA] = \\\"SP2894\\\" or [ROTA] = \\\"SP2895\\\" or [ROTA] = \\\"SP2896\\\" or [ROTA] = \\\"SP2911\\\" or [ROTA] = \\\"SP2937\\\" or [ROTA] = \\\"SP2914\\\" or [ROTA] = \\\"SP2938\\\" or [ROTA] = \\\"SP2916\\\" or [ROTA] = \\\"SP2921\\\" or [ROTA] = \\\"SP2922\\\" or [ROTA] = \\\"SP2923\\\" or [ROTA] = \\\"SP2924\\\")),\\n    #\\\"Duplicatas Removidas\\\" = Table.Distinct(#\\\"Linhas Filtradas\\\"),\\n    #\\\"Início da Hora Calculado\\\" = Table.TransformColumns(#\\\"Duplicatas Removidas\\\",{{\\\"HORA DA INTEGRACAO\\\", Time.StartOfHour, type time}}),\\n    #\\\"Colunas Renomeadas\\\" = Table.RenameColumns(#\\\"Início da Hora Calculado\\\",{{\\\"HORA DA INTEGRACAO\\\", \\\"hora_da_integração\\\"}}),\\n    #\\\"Colunas Reordenadas\\\" = Table.ReorderColumns(#\\\"Colunas Renomeadas\\\",{\\\"CODIGO DA EMPRESA\\\", \\\"CODIGO DA FILIAL\\\", \\\"DATA DE LIMITE\\\", \\\"DATA DA INTEGRACAO\\\", \\\"NUMERO DO PEDIDO\\\", \\\"CODIGO DA MERCADORIA\\\", \\\"DESCRICAO DA MERCADORIA\\\", \\\"QUANTIDADE DA MERCADORIA\\\", \\\"TIPO DE ENTREGA\\\", \\\"CODIGO DO SETOR\\\", \\\"DESCRICAO DO SETOR\\\", \\\"CODIGO EXPEDICAO\\\", \\\"TIPO DE EXPEDICAO\\\", \\\"DATA DE ENTRADA CAIXA\\\", \\\"ROTA\\\", \\\"STATUS PEDIDO\\\", \\\"TIPO PEDIDO\\\", \\\"CARGA\\\", \\\"hora_da_integração\\\"})\\nin\\n    #\\\"Colunas Reordenadas\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Arquivo de Amostra (3)",
      "lineageTag": "48367655-0cdd-4933-8c73-5cc6daa8e6d8",
      "queryGroupId": "e297bf89-cd04-43eb-b316-9d918185fa26",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Entrada - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Entrada - ADMs - Vinicius & Almeida\"]}[Content],",
        "    Navegação1 = #\"Entrada - ADMs - Vinicius & Almeida\"{0}[Content]",
        "in",
        "    Navegação1"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Binary",
      "isHidden": false
    },
    {
      "name": "Parâmetro2",
      "lineageTag": "9624e95f-c12e-41ac-bfcd-1e33bcda6978",
      "queryGroupId": "e297bf89-cd04-43eb-b316-9d918185fa26",
      "text": [
        "#\"Arquivo de Amostra (3)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Arquivo de Amostra (3)\", Type=\"Binary\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Transformar o Arquivo de Exemplo (2)",
      "lineageTag": "287e3b27-2357-4822-b838-e5b93d528956",
      "queryGroupId": "66f657e7-60cc-4e81-8993-a50dc7acc39a",
      "text": [
        "let",
        "    Fonte = Csv.Document(Parâmetro2,[Delimiter=\";\", Columns=20, Encoding=1252, QuoteStyle=QuoteStyle.None]),",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true])",
        "in",
        "    #\"Cabeçalhos Promovidos\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Transformar Arquivo (3)",
      "lineageTag": "686047ba-127b-4ef0-9043-dcc5651f452f",
      "queryGroupId": "e297bf89-cd04-43eb-b316-9d918185fa26",
      "text": [
        "let",
        "    Fonte = (Parâmetro2 as binary) => let",
        "    Fonte = Csv.Document(Parâmetro2,[Delimiter=\";\", Columns=20, Encoding=1252, QuoteStyle=QuoteStyle.None]),",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true])",
        "in",
        "    #\"Cabeçalhos Promovidos\"",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "carteira",
      "lineageTag": "ad533f5d-5eff-4721-ac8c-84768f608d64",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Carteira - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Carteira - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Arquivos Ocultos Filtrados1\" = Table.SelectRows(#\"Carteira - ADMs - Vinicius & Almeida\", each [Attributes]?[Hidden]? <> true),",
        "    #\"Arquivos Ocultos Filtrados2\" = Table.SelectRows(#\"Arquivos Ocultos Filtrados1\", each [Attributes]?[Hidden]? <> true),",
        "    #\"Invocar Função Personalizada1\" = Table.AddColumn(#\"Arquivos Ocultos Filtrados2\", \"Transformar Arquivo (6)\", each #\"Transformar Arquivo (6)\"([Content])),",
        "    #\"Colunas Renomeadas1\" = Table.RenameColumns(#\"Invocar Função Personalizada1\", {\"Name\", \"Nome da Origem\"}),",
        "    #\"Outras Colunas Removidas1\" = Table.SelectColumns(#\"Colunas Renomeadas1\", {\"Nome da Origem\", \"Transformar Arquivo (6)\"}),",
        "    #\"Coluna de Tabela Expandida1\" = Table.ExpandTableColumn(#\"Outras Colunas Removidas1\", \"Transformar Arquivo (6)\", Table.ColumnNames(#\"Transformar Arquivo (6)\"(#\"Arquivo de Amostra (6)\"))),",
        "    #\"Colunas Removidas\" = Table.RemoveColumns(#\"Coluna de Tabela Expandida1\",{\"Nome da Origem\"}),",
        "    #\"Valor Substituído\" = Table.ReplaceValue(#\"Colunas Removidas\",\" \",\"\",Replacer.ReplaceText,{\" UF_ROTA\"}),",
        "    #\"Linhas Filtradas\" = Table.SelectRows(#\"Valor Substituído\", each ([#\" UF_ROTA\"] = \"SP1989\" or [#\" UF_ROTA\"] = \"SP2023\"or [#\" UF_ROTA\"] = \"SP2027\" or [#\" UF_ROTA\"] = \"SP2856\" or [#\" UF_ROTA\"] = \"SP2869\" or [#\" UF_ROTA\"] = \"SP2870\" or [#\" UF_ROTA\"] = \"SP2871\" or [#\" UF_ROTA\"] = \"SP2872\" or [#\" UF_ROTA\"] = \"SP2873\" or [#\" UF_ROTA\"] = \"SP2874\" or [#\" UF_ROTA\"] = \"SP2875\" or [#\" UF_ROTA\"] = \"SP2894\" or [#\" UF_ROTA\"] = \"SP2895\" or [#\" UF_ROTA\"] = \"SP2896\" or [#\" UF_ROTA\"] = \"SP2911\" or [#\" UF_ROTA\"] = \"SP2912\" or [#\" UF_ROTA\"] = \"SP2914\" or [#\" UF_ROTA\"] = \"SP2915\" or [#\" UF_ROTA\"] = \"SP2916\" or [#\" UF_ROTA\"] = \"SP2921\" or [#\" UF_ROTA\"] = \"SP2922\" or [#\" UF_ROTA\"] = \"SP2923\" or [#\" UF_ROTA\"] = \"SP2924\" or [#\" UF_ROTA\"] = \"SP2925\"or [#\" UF_ROTA\"] = \"SP2937\" or [#\" UF_ROTA\"] = \"SP2938\")),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(#\"Linhas Filtradas\",{{\" TIPO \", type text}, {\"  PEDIDOS   \", Int64.Type}, {\" DESMEMB  \", Int64.Type}, {\" ORDEM_VENDA     \", type text}, {\" STATUS_PEDIDO       \", type text}, {\" QT_SKU \", Int64.Type}, {\" CD_SKU      \", Int64.Type}, {\" DS_SKU                                           \", type text}, {\" DIRETORIA                      \", type text}, {\" DT_EMI_CARGA\", type date}, {\"DEST \", Int64.Type}, {\" FIL_DST\", Int64.Type}, {\"TAF\", type text}, {\" RSR  \", Int64.Type}, {\"FIL_RESER\", Int64.Type}, {\"TAF_1\", type text}, {\"   TRANSPORTADOR                         \", type text}, {\" UF_DES  \", type text}, {\"DT_PREV_CARGA\", type date}, {\"   CARGA   \", Int64.Type}, {\"ST\", type text}, {\"MIC ZON \", type text}, {\"RT\", type text}, {\"CBG_PV   \", type number}, {\"DT_LIMITE  \", type date}, {\" VALOR_DO_ITEM    \", type number}, {\"TIPOETG\", type text}, {\"DATA PVE/MIG \", type date}, {\" DATA_PROMETIDA \", type date}, {\"DIAS_ROTA \", type number}, {\"REGIAO \", type number}, {\" VENDA  \", type text}, {\" TIPO_SKU\", type text}, {\" HORA_VENDA\", type time}, {\"DATA_MARCADA \", type date}, {\" CATEGORIA  \", type text}, {\" COD.MUNICIPIO \", Int64.Type}, {\" DESC. MUNICIPIO \", type text}, {\" LOGRADOURO                     \", type text}, {\" NUMERO     \", Int64.Type}, {\" BAIRRO          \", type text}, {\" FREQUENCIA DA MICROZONA        \", type text}, {\" CEP        \", Int64.Type}, {\" PEDIDO CRITICO(S/N) \", type text}, {\" CROSS DOCKING (S/N) \", type text}, {\" UNIDADE DE NEGOCIO \", type text}, {\"ID - MEGA ROTA \", Int64.Type}, {\" DESCRICAO MEGA ROTA \", type text}, {\" EAD\", type text}}),",
        "    #\"Dividir Coluna por Delimitador\" = Table.SplitColumn(#\"Tipo Alterado\", \"   TRANSPORTADOR                         \", Splitter.SplitTextByDelimiter(\"-\", QuoteStyle.Csv), {\"   TRANSPORTADOR                         .1\", \"   TRANSPORTADOR                         .2\"}),",
        "    #\"Tipo Alterado1\" = Table.TransformColumnTypes(#\"Dividir Coluna por Delimitador\",{{\"   TRANSPORTADOR                         .1\", Int64.Type}}),",
        "    #\"Personalização Adicionada\" = Table.AddColumn(#\"Tipo Alterado1\", \"TIPO DE ENTREGA\", each if [#\" UF_ROTA\"] = \"SP1989\" then \"Normal\" ",
        "else if [#\" UF_ROTA\"] = \"SP2023\" then \"Correios\"",
        "else if [#\" UF_ROTA\"] = \"SP2027\" then \"Expressa\" ",
        "else if [#\" UF_ROTA\"] = \"SP2869\" then \"Mega Rota JDI x RP\"",
        "else if [#\" UF_ROTA\"] = \"SP2870\" then \"Mega Rota JDI x BA\" ",
        "else if [#\" UF_ROTA\"] = \"SP2871\" then \"Mega Rota JDI x RJ\" ",
        "else if [#\" UF_ROTA\"] = \"SP2872\" then \"Mega Rota JDI x RS\" ",
        "else if [#\" UF_ROTA\"] = \"SP2873\" then \"Mega Rota JDI x PR\" ",
        "else if [#\" UF_ROTA\"] = \"SP2874\" then \"Mega Rota JDI x SBC\" ",
        "else if [#\" UF_ROTA\"] = \"SP2875\" then \"Mega Rota JDI x MG\" ",
        "else if [#\" UF_ROTA\"] = \"SP2894\" then \"Mega Rota 1200 DIALOGO\" ",
        "else if [#\" UF_ROTA\"] = \"SP2895\" then \"Mega Rota 1200 SAME DAY\" ",
        "else if [#\" UF_ROTA\"] = \"SP2896\" then \"Mega Rota 1200 DIRETA\" ",
        "else if [#\" UF_ROTA\"] = \"SP2922\" then \"Mega Rota JDI x PE\" ",
        "else if [#\" UF_ROTA\"] = \"SP2923\" then \"Mega Rota JDI x FBX\" ",
        "else if [#\" UF_ROTA\"] = \"SP2856\" then \"TP\" ",
        "else if [#\" UF_ROTA\"] = \"SP2921\" then \"TP-EAD\" ",
        "else \"TP-EAD\"),",
        "    #\"Tipo Alterado2\" = Table.TransformColumnTypes(#\"Personalização Adicionada\",{{\"TIPO DE ENTREGA\", type text}}),",
        "    #\"Colunas Renomeadas\" = Table.RenameColumns(#\"Tipo Alterado2\",{{\" UF_ROTA\", \"ROTA\"}}),",
        "    #\"Linhas Filtradas1\" = Table.SelectRows(#\"Colunas Renomeadas\",  each [ST] = \"A \" or [ST] = \"F\"),",
        "    #\"Personalização Adicionada1\" = Table.AddColumn(#\"Linhas Filtradas1\", \"TRANSP\", each if [#\"   TRANSPORTADOR                         .1\"] = ",
        "85186 then \"VVLOG\" else \"BR\"),",
        "    #\"Tipo Alterado4\" = Table.TransformColumnTypes(#\"Personalização Adicionada1\",{{\"DT_LIMITE  \", type datetime}}),",
        "    #\"Personalização Adicionada3\" = Table.AddColumn(#\"Tipo Alterado4\", \"data limite\", each if [TRANSP] = \"BR\" then ",
        "[#\"DT_LIMITE  \"] + #duration(0, 23, 59,59)",
        "else ",
        "[#\"DT_LIMITE  \"] + #duration(0, 23, 59,59)),",
        "    #\"Tipo Alterado5\" = Table.TransformColumnTypes(#\"Personalização Adicionada3\",{{\"data limite\", type datetime}}),",
        "    #\"Personalização Adicionada2\" = Table.AddColumn(#\"Tipo Alterado5\", \"status\", each if DateTime.LocalNow() > DateTime.From([data limite]) then \"Vencidos\"",
        "else if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) < 1 then \"Vence Hoje\"",
        "else if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) < 2 then \"D+1\" // Agora essa condição verifica se a diferença é menor que 2",
        "else if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) = 2 then \"D+2\"",
        "else if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 4) then \"D+1\"",
        "else if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 5) then \"D+2\"",
        "else if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) > 5) then \" >D+2\"",
        "else if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 3) then \"Vence Segunda\"",
        "else if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 4) then \"D+1\"",
        "else if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 5) then \"D+2\"",
        "else if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) > 5) then \" >D+2\"",
        "else if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 1) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 2) then \"Vence Segunda\"",
        "else if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 2 then \"D+1\"",
        "else if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 3 then \"D+2\"",
        "else \" >D+2\"),",
        "    #\"Tipo Alterado3\" = Table.TransformColumnTypes(#\"Personalização Adicionada2\",{{\"status\", type text}}),",
        "    #\"Coluna Duplicada\" = Table.DuplicateColumn(#\"Tipo Alterado3\", \"data limite\", \"data limite - Copiar\"),",
        "    #\"Tipo Alterado6\" = Table.TransformColumnTypes(#\"Coluna Duplicada\",{{\"data limite - Copiar\", type date}}),",
        "    #\"Colunas Renomeadas2\" = Table.RenameColumns(#\"Tipo Alterado6\",{{\"data limite - Copiar\", \"data limite2\"}})",
        "in",
        "    #\"Colunas Renomeadas2\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = SharePoint.Contents(\\\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\\\", [ApiVersion = 15]),\\n    #\\\"Atualizaes de Relatrios Gerais\\\" = Fonte{[Name=\\\"Atualizaes de Relatrios Gerais\\\"]}[Content],\\n    #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\" = #\\\"Atualizaes de Relatrios Gerais\\\"{[Name=\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Relatórios rotativos\\\" = #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Relatórios rotativos\\\"]}[Content],\\n    #\\\"Painel Online - ADMs - Vinicius & Almeida\\\" = #\\\"Relatórios rotativos\\\"{[Name=\\\"Painel Online - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Carteira - ADMs - Vinicius & Almeida\\\" = #\\\"Painel Online - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Carteira - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Arquivos Ocultos Filtrados1\\\" = Table.SelectRows(#\\\"Carteira - ADMs - Vinicius & Almeida\\\", each [Attributes]?[Hidden]? <> true),\\n    #\\\"Arquivos Ocultos Filtrados2\\\" = Table.SelectRows(#\\\"Arquivos Ocultos Filtrados1\\\", each [Attributes]?[Hidden]? <> true),\\n    #\\\"Invocar Função Personalizada1\\\" = Table.AddColumn(#\\\"Arquivos Ocultos Filtrados2\\\", \\\"Transformar Arquivo (6)\\\", each #\\\"Transformar Arquivo (6)\\\"([Content])),\\n    #\\\"Colunas Renomeadas1\\\" = Table.RenameColumns(#\\\"Invocar Função Personalizada1\\\", {\\\"Name\\\", \\\"Nome da Origem\\\"}),\\n    #\\\"Outras Colunas Removidas1\\\" = Table.SelectColumns(#\\\"Colunas Renomeadas1\\\", {\\\"Nome da Origem\\\", \\\"Transformar Arquivo (6)\\\"}),\\n    #\\\"Coluna de Tabela Expandida1\\\" = Table.ExpandTableColumn(#\\\"Outras Colunas Removidas1\\\", \\\"Transformar Arquivo (6)\\\", Table.ColumnNames(#\\\"Transformar Arquivo (6)\\\"(#\\\"Arquivo de Amostra (6)\\\"))),\\n    #\\\"Colunas Removidas\\\" = Table.RemoveColumns(#\\\"Coluna de Tabela Expandida1\\\",{\\\"Nome da Origem\\\"}),\\n    #\\\"Valor Substituído\\\" = Table.ReplaceValue(#\\\"Colunas Removidas\\\",\\\" \\\",\\\"\\\",Replacer.ReplaceText,{\\\" UF_ROTA\\\"}),\\n    #\\\"Linhas Filtradas\\\" = Table.SelectRows(#\\\"Valor Substituído\\\", each ([#\\\" UF_ROTA\\\"] = \\\"SP1989\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2023\\\"or [#\\\" UF_ROTA\\\"] = \\\"SP2027\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2856\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2869\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2870\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2871\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2872\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2873\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2874\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2875\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2894\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2895\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2896\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2911\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2912\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2914\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2915\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2916\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2921\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2922\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2923\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2924\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2925\\\"or [#\\\" UF_ROTA\\\"] = \\\"SP2937\\\" or [#\\\" UF_ROTA\\\"] = \\\"SP2938\\\")),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(#\\\"Linhas Filtradas\\\",{{\\\" TIPO \\\", type text}, {\\\"  PEDIDOS   \\\", Int64.Type}, {\\\" DESMEMB  \\\", Int64.Type}, {\\\" ORDEM_VENDA     \\\", type text}, {\\\" STATUS_PEDIDO       \\\", type text}, {\\\" QT_SKU \\\", Int64.Type}, {\\\" CD_SKU      \\\", Int64.Type}, {\\\" DS_SKU                                           \\\", type text}, {\\\" DIRETORIA                      \\\", type text}, {\\\" DT_EMI_CARGA\\\", type date}, {\\\"DEST \\\", Int64.Type}, {\\\" FIL_DST\\\", Int64.Type}, {\\\"TAF\\\", type text}, {\\\" RSR  \\\", Int64.Type}, {\\\"FIL_RESER\\\", Int64.Type}, {\\\"TAF_1\\\", type text}, {\\\"   TRANSPORTADOR                         \\\", type text}, {\\\" UF_DES  \\\", type text}, {\\\"DT_PREV_CARGA\\\", type date}, {\\\"   CARGA   \\\", Int64.Type}, {\\\"ST\\\", type text}, {\\\"MIC ZON \\\", type text}, {\\\"RT\\\", type text}, {\\\"CBG_PV   \\\", type number}, {\\\"DT_LIMITE  \\\", type date}, {\\\" VALOR_DO_ITEM    \\\", type number}, {\\\"TIPOETG\\\", type text}, {\\\"DATA PVE/MIG \\\", type date}, {\\\" DATA_PROMETIDA \\\", type date}, {\\\"DIAS_ROTA \\\", type number}, {\\\"REGIAO \\\", type number}, {\\\" VENDA  \\\", type text}, {\\\" TIPO_SKU\\\", type text}, {\\\" HORA_VENDA\\\", type time}, {\\\"DATA_MARCADA \\\", type date}, {\\\" CATEGORIA  \\\", type text}, {\\\" COD.MUNICIPIO \\\", Int64.Type}, {\\\" DESC. MUNICIPIO \\\", type text}, {\\\" LOGRADOURO                     \\\", type text}, {\\\" NUMERO     \\\", Int64.Type}, {\\\" BAIRRO          \\\", type text}, {\\\" FREQUENCIA DA MICROZONA        \\\", type text}, {\\\" CEP        \\\", Int64.Type}, {\\\" PEDIDO CRITICO(S/N) \\\", type text}, {\\\" CROSS DOCKING (S/N) \\\", type text}, {\\\" UNIDADE DE NEGOCIO \\\", type text}, {\\\"ID - MEGA ROTA \\\", Int64.Type}, {\\\" DESCRICAO MEGA ROTA \\\", type text}, {\\\" EAD\\\", type text}}),\\n    #\\\"Dividir Coluna por Delimitador\\\" = Table.SplitColumn(#\\\"Tipo Alterado\\\", \\\"   TRANSPORTADOR                         \\\", Splitter.SplitTextByDelimiter(\\\"-\\\", QuoteStyle.Csv), {\\\"   TRANSPORTADOR                         .1\\\", \\\"   TRANSPORTADOR                         .2\\\"}),\\n    #\\\"Tipo Alterado1\\\" = Table.TransformColumnTypes(#\\\"Dividir Coluna por Delimitador\\\",{{\\\"   TRANSPORTADOR                         .1\\\", Int64.Type}}),\\n    #\\\"Personalização Adicionada\\\" = Table.AddColumn(#\\\"Tipo Alterado1\\\", \\\"TIPO DE ENTREGA\\\", each if [#\\\" UF_ROTA\\\"] = \\\"SP1989\\\" then \\\"Normal\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2023\\\" then \\\"Correios\\\"\\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2027\\\" then \\\"Expressa\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2869\\\" then \\\"Mega Rota JDI x RP\\\"\\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2870\\\" then \\\"Mega Rota JDI x BA\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2871\\\" then \\\"Mega Rota JDI x RJ\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2872\\\" then \\\"Mega Rota JDI x RS\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2873\\\" then \\\"Mega Rota JDI x PR\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2874\\\" then \\\"Mega Rota JDI x SBC\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2875\\\" then \\\"Mega Rota JDI x MG\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2894\\\" then \\\"Mega Rota 1200 DIALOGO\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2895\\\" then \\\"Mega Rota 1200 SAME DAY\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2896\\\" then \\\"Mega Rota 1200 DIRETA\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2922\\\" then \\\"Mega Rota JDI x PE\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2923\\\" then \\\"Mega Rota JDI x FBX\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2856\\\" then \\\"TP\\\" \\nelse if [#\\\" UF_ROTA\\\"] = \\\"SP2921\\\" then \\\"TP-EAD\\\" \\nelse \\\"TP-EAD\\\"),\\n    #\\\"Tipo Alterado2\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada\\\",{{\\\"TIPO DE ENTREGA\\\", type text}}),\\n    #\\\"Colunas Renomeadas\\\" = Table.RenameColumns(#\\\"Tipo Alterado2\\\",{{\\\" UF_ROTA\\\", \\\"ROTA\\\"}}),\\n    #\\\"Linhas Filtradas1\\\" = Table.SelectRows(#\\\"Colunas Renomeadas\\\",  each [ST] = \\\"A \\\" or [ST] = \\\"F\\\"),\\n    #\\\"Personalização Adicionada1\\\" = Table.AddColumn(#\\\"Linhas Filtradas1\\\", \\\"TRANSP\\\", each if [#\\\"   TRANSPORTADOR                         .1\\\"] = \\n85186 then \\\"VVLOG\\\" else \\\"BR\\\"),\\n    #\\\"Tipo Alterado4\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada1\\\",{{\\\"DT_LIMITE  \\\", type datetime}}),\\n    #\\\"Personalização Adicionada3\\\" = Table.AddColumn(#\\\"Tipo Alterado4\\\", \\\"data limite\\\", each if [TRANSP] = \\\"BR\\\" then \\n[#\\\"DT_LIMITE  \\\"] + #duration(0, 23, 59,59)\\nelse \\n[#\\\"DT_LIMITE  \\\"] + #duration(0, 23, 59,59)),\\n    #\\\"Tipo Alterado5\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada3\\\",{{\\\"data limite\\\", type datetime}}),\\n    #\\\"Personalização Adicionada2\\\" = Table.AddColumn(#\\\"Tipo Alterado5\\\", \\\"status\\\", each if DateTime.LocalNow() > DateTime.From([data limite]) then \\\"Vencidos\\\"\\nelse if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) < 1 then \\\"Vence Hoje\\\"\\nelse if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) < 2 then \\\"D+1\\\" // Agora essa condição verifica se a diferença é menor que 2\\nelse if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) = 2 then \\\"D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 4) then \\\"D+1\\\"\\nelse if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 5) then \\\"D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) > 5) then \\\" >D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 3) then \\\"Vence Segunda\\\"\\nelse if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 4) then \\\"D+1\\\"\\nelse if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 5) then \\\"D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) > 5) then \\\" >D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.From(DateTime.LocalNow()), Day.Monday) + 1 = 1) and (Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 2) then \\\"Vence Segunda\\\"\\nelse if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 2 then \\\"D+1\\\"\\nelse if Duration.Days(DateTime.From([data limite]) - DateTime.LocalNow()) <= 3 then \\\"D+2\\\"\\nelse \\\" >D+2\\\"),\\n    #\\\"Tipo Alterado3\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada2\\\",{{\\\"status\\\", type text}}),\\n    #\\\"Coluna Duplicada\\\" = Table.DuplicateColumn(#\\\"Tipo Alterado3\\\", \\\"data limite\\\", \\\"data limite - Copiar\\\"),\\n    #\\\"Tipo Alterado6\\\" = Table.TransformColumnTypes(#\\\"Coluna Duplicada\\\",{{\\\"data limite - Copiar\\\", type date}}),\\n    #\\\"Colunas Renomeadas2\\\" = Table.RenameColumns(#\\\"Tipo Alterado6\\\",{{\\\"data limite - Copiar\\\", \\\"data limite2\\\"}})\\nin\\n    #\\\"Colunas Renomeadas2\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Transformar Arquivo (4)",
      "lineageTag": "2fbaac26-a1b8-431a-90bf-625324c6162f",
      "queryGroupId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62",
      "text": [
        "let",
        "    Fonte = (Parâmetro2) => let",
        "        Fonte = Csv.Document(Parâmetro2,[Delimiter=\";\", Columns=20, Encoding=1252, QuoteStyle=QuoteStyle.None]),",
        "        #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true])",
        "    in",
        "        #\"Cabeçalhos Promovidos\"",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "Arquivo de Amostra (4)",
      "lineageTag": "c0dba87e-0526-4736-a5ef-bc3a7d42c4b5",
      "queryGroupId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Entrada - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Entrada - ADMs - Vinicius & Almeida\"]}[Content],",
        "    Navegação1 = #\"Entrada - ADMs - Vinicius & Almeida\"{0}[Content]",
        "in",
        "    Navegação1"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Binary",
      "isHidden": false
    },
    {
      "name": "Arquivo de Amostra (5)",
      "lineageTag": "fc68030c-15f2-4252-b4dd-51a54d5bb0fc",
      "queryGroupId": "72129429-b6bc-4fc0-be2b-5f174f240276",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Carteira - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Carteira - ADMs - Vinicius & Almeida\"]}[Content],",
        "    Navegação1 = #\"Carteira - ADMs - Vinicius & Almeida\"{0}[Content]",
        "in",
        "    Navegação1"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Parâmetro3",
      "lineageTag": "4650c6af-1e3c-424a-8aac-0bce151c9770",
      "queryGroupId": "72129429-b6bc-4fc0-be2b-5f174f240276",
      "text": [
        "#\"Arquivo de Amostra (5)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Arquivo de Amostra (5)\", Type=\"Binary\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Transformar o Arquivo de Exemplo (3)",
      "lineageTag": "9a40d010-e508-43bf-b21b-a5515c6ab00c",
      "queryGroupId": "9999e468-fcdd-40c0-8303-3740c8f82721",
      "text": [
        "let",
        "    Fonte = Csv.Document(Parâmetro3,[Delimiter=\":\", Encoding=1252])",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Transformar Arquivo (5)",
      "lineageTag": "b9c51708-c97a-477a-9fa7-52716757205d",
      "queryGroupId": "72129429-b6bc-4fc0-be2b-5f174f240276",
      "text": [
        "let",
        "    Fonte = (Parâmetro3 as binary) => let",
        "    Fonte = Csv.Document(Parâmetro3,[Delimiter=\":\", Encoding=1252])",
        "in",
        "    Fonte",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "Arquivo de Amostra (6)",
      "lineageTag": "e3eecc63-ca85-4efc-9df6-906b267d17ab",
      "queryGroupId": "8178989a-1b99-4d68-8eab-7a8015a4cbbf",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Carteira - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Carteira - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Arquivos Ocultos Filtrados1\" = Table.SelectRows(#\"Carteira - ADMs - Vinicius & Almeida\", each [Attributes]?[Hidden]? <> true),",
        "    Navegação1 = #\"Arquivos Ocultos Filtrados1\"{0}[Content]",
        "in",
        "    Navegação1"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Parâmetro4",
      "lineageTag": "2a7592ae-c3b0-42f2-8f88-deb003c7cf38",
      "queryGroupId": "8178989a-1b99-4d68-8eab-7a8015a4cbbf",
      "text": [
        "#\"Arquivo de Amostra (6)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Arquivo de Amostra (6)\", Type=\"Binary\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Transformar o Arquivo de Exemplo (4)",
      "lineageTag": "b0d1c28b-a608-49d1-a6f4-1319b71352b9",
      "queryGroupId": "074b4ed6-e3f7-4174-85fe-b77bdc174b46",
      "text": [
        "let",
        "    Fonte = Csv.Document(Parâmetro4,[Delimiter=\";\", Columns=54, Encoding=1252]),",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true])",
        "in",
        "    #\"Cabeçalhos Promovidos\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Transformar Arquivo (6)",
      "lineageTag": "5703a078-a688-4f26-957e-cfa858471e61",
      "queryGroupId": "8178989a-1b99-4d68-8eab-7a8015a4cbbf",
      "text": [
        "let",
        "    Fonte = (Parâmetro4 as binary) => let",
        "    Fonte = Csv.Document(Parâmetro4,[Delimiter=\";\", Columns=54, Encoding=1252]),",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true])",
        "in",
        "    #\"Cabeçalhos Promovidos\"",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "status oLPN",
      "lineageTag": "3c4b09b5-1f59-4601-b6d1-ccffea4e39a5",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Status oLPN - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Status oLPN - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Arquivos Ocultos Filtrados1\" = Table.SelectRows(#\"Status oLPN - ADMs - Vinicius & Almeida\", each [Attributes]?[Hidden]? <> true),",
        "    #\"Invocar Função Personalizada1\" = Table.AddColumn(#\"Arquivos Ocultos Filtrados1\", \"Transformar Arquivo (8)\", each #\"Transformar Arquivo (8)\"([Content])),",
        "    #\"Colunas Renomeadas1\" = Table.RenameColumns(#\"Invocar Função Personalizada1\", {\"Name\", \"Nome da Origem\"}),",
        "    #\"Outras Colunas Removidas1\" = Table.SelectColumns(#\"Colunas Renomeadas1\", {\"Nome da Origem\", \"Transformar Arquivo (8)\"}),",
        "    #\"Coluna de Tabela Expandida1\" = Table.ExpandTableColumn(#\"Outras Colunas Removidas1\", \"Transformar Arquivo (8)\", Table.ColumnNames(#\"Transformar Arquivo (8)\"(#\"Arquivo de Amostra (8)\"))),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(#\"Coluna de Tabela Expandida1\",{{\"Nome da Origem\", type text}, {\"Filial\", Int64.Type}, {\"Data do Pedido\", type datetime}, {\"Tipo de pedido\", type text}, {\"Wave\", type text}, {\"Data locação pedido\", type datetime}, {\"Shipment\", Int64.Type}, {\"Filial Destino\", Int64.Type}, {\"Pedido\", Int64.Type}, {\"Status Pedido\", type text}, {\"Pedido de Venda\", Int64.Type}, {\"oLPN\", Int64.Type}, {\"Último Update oLPN\", type datetime}, {\"TOTE\", type text}, {\"Tarefa\", type text}, {\"Tarefa Status\", type text}, {\"Grupo de Tarefa\", type text}, {\"Item\", Int64.Type}, {\"Descrição\", type text}, {\"Local de Picking\", type text}, {\"Qtde. Peças Item\", Int64.Type}, {\"Volume\", type number}, {\"Status oLPN\", type text}, {\"Numero da Gaiola\", Int64.Type}, {\"BOX\", Int64.Type}, {\"Marcação de EAD\", type any}, {\"Data Prevista Entrega\", type date}, {\"Data Limite Expedição\", type date}, {\"Inventory Type ID\", Int64.Type}, {\"Cod Setor Item\", Int64.Type}, {\"Desc Setor Item\", type text}, {\"Audit Status\", type text}}),",
        "    #\"Colunas Removidas\" = Table.RemoveColumns(#\"Tipo Alterado\",{\"Nome da Origem\"}),",
        "    #\"Data Extraída\" = Table.TransformColumns(#\"Colunas Removidas\",{{\"Data do Pedido\", DateTime.Date, type date}}),",
        "    #\"Linhas Filtradas\" = Table.SelectRows(#\"Data Extraída\", each ([Status oLPN] <> \"Cancelled\")),",
        "    #\"Tipo Alterado9\" = Table.TransformColumnTypes(#\"Linhas Filtradas\",{{\"Data do Pedido\", type datetime}, {\"Data Prevista Entrega\", type datetime}, {\"Data Limite Expedição\", type datetime}}),",
        "    #\"Personalização Adicionada\" = Table.AddColumn(#\"Tipo Alterado9\", \"Etapa\", each if [Status oLPN] = \"Created\" then \"Created - Em Separação\"",
        "else if [Status oLPN] = \"In Progress\" then \"Created - Em Separação\"",
        "else if [Status oLPN] = \"Packing\" then \"Packed S. Gaiola - Em Faturamento\"",
        "else if [Status oLPN] = \"Packed\" and [Numero da Gaiola] = null then \"Packed S. Gaiola - Em Faturamento\"",
        "else if [Status oLPN] = \"Packed\" then \"Packed C. Gaiola - Em Expedição\"",
        "else if [Status oLPN] = \"Shipped\" then \"Shipped - Expedido\"",
        "else \"Cancelled - Cancelado\"),",
        "    #\"Tipo Alterado1\" = Table.TransformColumnTypes(#\"Personalização Adicionada\",{{\"Etapa\", type text}, {\"Data Limite Expedição\", type datetime}}),",
        "    #\"Personalização Adicionada1\" = Table.AddColumn(#\"Tipo Alterado1\", \"data\", each [Data Limite Expedição] + #duration(0, 23, 59, 59)),",
        "    #\"Colunas Removidas1\" = Table.RemoveColumns(#\"Personalização Adicionada1\",{\"Data Limite Expedição\"}),",
        "    #\"Colunas Renomeadas\" = Table.RenameColumns(#\"Colunas Removidas1\",{{\"data\", \"Data Limite Expedição\"}}),",
        "    status = Table.AddColumn(#\"Colunas Renomeadas\", \"status\", each if [Etapa] = \"Shipped - Expedido\" then \"Expedido\"",
        "else if [Etapa] = \"Cancelled - Cancelado\" then \"Cancelado\"",
        "else if DateTime.From([Data Limite Expedição]) < DateTime.LocalNow() then \"Vencidos\"",
        "else if Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 1 then \"Vence Hoje\"",
        "else if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 4) then \"D+1\"",
        "else if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 5) then \"D+2\"",
        "else if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) > 5) then \" >D+2\"",
        "else if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 3) then \"Vence Segunda\"",
        "else if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 4) then \"D+1\"",
        "else if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 5) then \"D+2\"",
        "else if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) > 5) then \" >D+2\"",
        "else if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 1) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 2) then \"Vence Segunda\"",
        "else if Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 1.1 then \"D+1\"",
        "else if Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 3 then \"D+2\"",
        "else \" >D+2\"),",
        "    #\"Tipo Alterado2\" = Table.TransformColumnTypes(status,{{\"status\", type text}}),",
        "    #\"Coluna Duplicada\" = Table.DuplicateColumn(#\"Tipo Alterado2\", \"Data Limite Expedição\", \"Data Limite Expedição - Copiar\"),",
        "    #\"Colunas Renomeadas2\" = Table.RenameColumns(#\"Coluna Duplicada\",{{\"Data Limite Expedição - Copiar\", \"data para a data\"}}),",
        "    #\"Tipo Alterado10\" = Table.TransformColumnTypes(#\"Colunas Renomeadas2\",{{\"data para a data\", type date}}),",
        "    #\"Personalização Adicionada2\" = Table.AddColumn(#\"Tipo Alterado10\", \"Data\", each if DateTime.From([data para a data]) <= Date.AddDays(DateTime.From(DateTime.LocalNow()), -1) then ",
        "    \"<=\" & Date.ToText(Date.AddDays(Date.From(DateTime.LocalNow()), -1), \"dd/MM\")",
        "else if DateTime.From([data para a data]) >= Date.AddDays(DateTime.From(DateTime.LocalNow()), 6) then ",
        "    \">=\" & Date.ToText(Date.AddDays(Date.From(DateTime.LocalNow()), 6), \"dd/MM\")",
        "else ",
        "    [data para a data]),",
        "    #\"Tipo Alterado3\" = Table.TransformColumnTypes(#\"Personalização Adicionada2\",{{\"Data\", type text}}),",
        "    #\"Personalização Adicionada3\" = Table.AddColumn(#\"Tipo Alterado3\", \"Rota\", each if [BOX] <> 870 and [BOX] <> 872 and [BOX] <> 770 then \"BR\" else \"VVLOG\"),",
        "    #\"Tipo Alterado4\" = Table.TransformColumnTypes(#\"Personalização Adicionada3\",{{\"Rota\", type text}}),",
        "    #\"Personalização Adicionada4\" = Table.AddColumn(#\"Tipo Alterado4\", \"Setor\", each if [Status oLPN] = \"Created\" then \"01_Picking\"",
        "else if [Status oLPN] = \"In Progress\" then \"01_Picking\"",
        "else if [Status oLPN] = \"Packing\" then \"02_Packing\"",
        "else if [Status oLPN] = \"Packed\" and [Numero da Gaiola] = \"\" then \"02_Packing\"",
        "else if [Status oLPN] = \"Packed\" then \"03_Expedição\"",
        "else if [Status oLPN] = \"Shipped\" then \"Expedido\"",
        "else \"Cancelado\"),",
        "    #\"Tipo Alterado5\" = Table.TransformColumnTypes(#\"Personalização Adicionada4\",{{\"Setor\", type text}}),",
        "    #\"Personalização Adicionada5\" = Table.AddColumn(#\"Tipo Alterado5\", \"area\", each if Text.Start([Local de Picking], 2) = \"C0\" or ",
        "   Text.Start([Local de Picking], 2) = \"P0\" or ",
        "   Text.Start([Local de Picking], 2) = \"R0\" or ",
        "   Text.Middle([Local de Picking], 4, 3) = \"PAR\" then ",
        "    \"P.A.R.\" ",
        "else ",
        "    \"SALÃO\"),",
        "    #\"Tipo Alterado6\" = Table.TransformColumnTypes(#\"Personalização Adicionada5\",{{\"area\", type text}, {\"Data do Pedido\", type datetime}}),",
        "    #\"Personalização Adicionada6\" = Table.AddColumn(#\"Tipo Alterado6\", \"Atraso\", each if ",
        "    [Data Limite Expedição] <> null and DateTime.From([Data Limite Expedição]) < DateTime.LocalNow() and ",
        "    [status] <> \"Expedido\" and ",
        "    [status] <> \"Cancelado\" then ",
        "    if [Data do Pedido] <> null and DateTime.From([Data do Pedido]) > DateTime.From([Data Limite Expedição]) then ",
        "        \"INTEGRADO EM ATRASO\" ",
        "    else ",
        "        \"ATRASO\" ",
        "else ",
        "    \"-\"),",
        "    #\"Tipo Alterado7\" = Table.TransformColumnTypes(#\"Personalização Adicionada6\",{{\"Atraso\", type text}}),",
        "    #\"Personalização Adicionada7\" = Table.AddColumn(#\"Tipo Alterado7\", \"descricao_atividade\", each if [Status oLPN] = \"Shipped\" then \"09_Expedido\"",
        "else if [Status oLPN] = \"Created\" and [Tarefa Status] = null then \"01_Sem Tarefa\"",
        "else if [Status oLPN] = \"Created\" and [Tarefa Status] = \"Held\" then \"02_Held\"",
        "else if [Status oLPN] = \"Created\" and [Tarefa Status] = \"Ready For Assignment\" then \"03_Picking Liberado\"",
        "else if [Status oLPN] = \"Created\" and [Tarefa Status] = \"Assigned\" then \"04_Início de Picking\"",
        "else if [Status oLPN] = \"Created\" and ([Tarefa Status] = \"In Progress\" or [Tarefa Status] = \"Pending Complete\") then \"05_Em Separação\"",
        "else if [Status oLPN] = \"Created\" and [Tarefa Status] = \"Completed\" then \"06_Fim de Separação\"",
        "else if [Status oLPN] = \"Packed\" and [Numero da Gaiola] = null then \"07_Em Faturamento\"",
        "else if [Status oLPN] = \"Packed\" and [Numero da Gaiola] <> null then \"08_Em Expedição\"",
        "else if [Status oLPN] = \"Cancelled\" then \"10_Cancelado\"",
        "else null),",
        "    #\"Tipo Alterado8\" = Table.TransformColumnTypes(#\"Personalização Adicionada7\",{{\"descricao_atividade\", type text}}),",
        "    #\"Linhas Filtradas1\" = Table.SelectRows(#\"Tipo Alterado8\", each true)",
        "in",
        "    #\"Linhas Filtradas1\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = SharePoint.Contents(\\\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\\\", [ApiVersion = 15]),\\n    #\\\"Atualizaes de Relatrios Gerais\\\" = Fonte{[Name=\\\"Atualizaes de Relatrios Gerais\\\"]}[Content],\\n    #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\" = #\\\"Atualizaes de Relatrios Gerais\\\"{[Name=\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Relatórios rotativos\\\" = #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Relatórios rotativos\\\"]}[Content],\\n    #\\\"Painel Online - ADMs - Vinicius & Almeida\\\" = #\\\"Relatórios rotativos\\\"{[Name=\\\"Painel Online - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Status oLPN - ADMs - Vinicius & Almeida\\\" = #\\\"Painel Online - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Status oLPN - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Arquivos Ocultos Filtrados1\\\" = Table.SelectRows(#\\\"Status oLPN - ADMs - Vinicius & Almeida\\\", each [Attributes]?[Hidden]? <> true),\\n    #\\\"Invocar Função Personalizada1\\\" = Table.AddColumn(#\\\"Arquivos Ocultos Filtrados1\\\", \\\"Transformar Arquivo (8)\\\", each #\\\"Transformar Arquivo (8)\\\"([Content])),\\n    #\\\"Colunas Renomeadas1\\\" = Table.RenameColumns(#\\\"Invocar Função Personalizada1\\\", {\\\"Name\\\", \\\"Nome da Origem\\\"}),\\n    #\\\"Outras Colunas Removidas1\\\" = Table.SelectColumns(#\\\"Colunas Renomeadas1\\\", {\\\"Nome da Origem\\\", \\\"Transformar Arquivo (8)\\\"}),\\n    #\\\"Coluna de Tabela Expandida1\\\" = Table.ExpandTableColumn(#\\\"Outras Colunas Removidas1\\\", \\\"Transformar Arquivo (8)\\\", Table.ColumnNames(#\\\"Transformar Arquivo (8)\\\"(#\\\"Arquivo de Amostra (8)\\\"))),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(#\\\"Coluna de Tabela Expandida1\\\",{{\\\"Nome da Origem\\\", type text}, {\\\"Filial\\\", Int64.Type}, {\\\"Data do Pedido\\\", type datetime}, {\\\"Tipo de pedido\\\", type text}, {\\\"Wave\\\", type text}, {\\\"Data locação pedido\\\", type datetime}, {\\\"Shipment\\\", Int64.Type}, {\\\"Filial Destino\\\", Int64.Type}, {\\\"Pedido\\\", Int64.Type}, {\\\"Status Pedido\\\", type text}, {\\\"Pedido de Venda\\\", Int64.Type}, {\\\"oLPN\\\", Int64.Type}, {\\\"Último Update oLPN\\\", type datetime}, {\\\"TOTE\\\", type text}, {\\\"Tarefa\\\", type text}, {\\\"Tarefa Status\\\", type text}, {\\\"Grupo de Tarefa\\\", type text}, {\\\"Item\\\", Int64.Type}, {\\\"Descrição\\\", type text}, {\\\"Local de Picking\\\", type text}, {\\\"Qtde. Peças Item\\\", Int64.Type}, {\\\"Volume\\\", type number}, {\\\"Status oLPN\\\", type text}, {\\\"Numero da Gaiola\\\", Int64.Type}, {\\\"BOX\\\", Int64.Type}, {\\\"Marcação de EAD\\\", type any}, {\\\"Data Prevista Entrega\\\", type date}, {\\\"Data Limite Expedição\\\", type date}, {\\\"Inventory Type ID\\\", Int64.Type}, {\\\"Cod Setor Item\\\", Int64.Type}, {\\\"Desc Setor Item\\\", type text}, {\\\"Audit Status\\\", type text}}),\\n    #\\\"Colunas Removidas\\\" = Table.RemoveColumns(#\\\"Tipo Alterado\\\",{\\\"Nome da Origem\\\"}),\\n    #\\\"Data Extraída\\\" = Table.TransformColumns(#\\\"Colunas Removidas\\\",{{\\\"Data do Pedido\\\", DateTime.Date, type date}}),\\n    #\\\"Linhas Filtradas\\\" = Table.SelectRows(#\\\"Data Extraída\\\", each ([Status oLPN] <> \\\"Cancelled\\\")),\\n    #\\\"Tipo Alterado9\\\" = Table.TransformColumnTypes(#\\\"Linhas Filtradas\\\",{{\\\"Data do Pedido\\\", type datetime}, {\\\"Data Prevista Entrega\\\", type datetime}, {\\\"Data Limite Expedição\\\", type datetime}}),\\n    #\\\"Personalização Adicionada\\\" = Table.AddColumn(#\\\"Tipo Alterado9\\\", \\\"Etapa\\\", each if [Status oLPN] = \\\"Created\\\" then \\\"Created - Em Separação\\\"\\nelse if [Status oLPN] = \\\"In Progress\\\" then \\\"Created - Em Separação\\\"\\nelse if [Status oLPN] = \\\"Packing\\\" then \\\"Packed S. Gaiola - Em Faturamento\\\"\\nelse if [Status oLPN] = \\\"Packed\\\" and [Numero da Gaiola] = null then \\\"Packed S. Gaiola - Em Faturamento\\\"\\nelse if [Status oLPN] = \\\"Packed\\\" then \\\"Packed C. Gaiola - Em Expedição\\\"\\nelse if [Status oLPN] = \\\"Shipped\\\" then \\\"Shipped - Expedido\\\"\\nelse \\\"Cancelled - Cancelado\\\"),\\n    #\\\"Tipo Alterado1\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada\\\",{{\\\"Etapa\\\", type text}, {\\\"Data Limite Expedição\\\", type datetime}}),\\n    #\\\"Personalização Adicionada1\\\" = Table.AddColumn(#\\\"Tipo Alterado1\\\", \\\"data\\\", each [Data Limite Expedição] + #duration(0, 23, 59, 59)),\\n    #\\\"Colunas Removidas1\\\" = Table.RemoveColumns(#\\\"Personalização Adicionada1\\\",{\\\"Data Limite Expedição\\\"}),\\n    #\\\"Colunas Renomeadas\\\" = Table.RenameColumns(#\\\"Colunas Removidas1\\\",{{\\\"data\\\", \\\"Data Limite Expedição\\\"}}),\\n    status = Table.AddColumn(#\\\"Colunas Renomeadas\\\", \\\"status\\\", each if [Etapa] = \\\"Shipped - Expedido\\\" then \\\"Expedido\\\"\\nelse if [Etapa] = \\\"Cancelled - Cancelado\\\" then \\\"Cancelado\\\"\\nelse if DateTime.From([Data Limite Expedição]) < DateTime.LocalNow() then \\\"Vencidos\\\"\\nelse if Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 1 then \\\"Vence Hoje\\\"\\nelse if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 4) then \\\"D+1\\\"\\nelse if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 5) then \\\"D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 6) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) > 5) then \\\" >D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 3) then \\\"Vence Segunda\\\"\\nelse if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 4) then \\\"D+1\\\"\\nelse if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 5) then \\\"D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 7) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) > 5) then \\\" >D+2\\\"\\nelse if (Date.DayOfWeek(DateTime.LocalNow(), Day.Monday) + 1 = 1) and (Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 2) then \\\"Vence Segunda\\\"\\nelse if Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 1.1 then \\\"D+1\\\"\\nelse if Duration.Days(DateTime.From([Data Limite Expedição]) - DateTime.LocalNow()) <= 3 then \\\"D+2\\\"\\nelse \\\" >D+2\\\"),\\n    #\\\"Tipo Alterado2\\\" = Table.TransformColumnTypes(status,{{\\\"status\\\", type text}}),\\n    #\\\"Coluna Duplicada\\\" = Table.DuplicateColumn(#\\\"Tipo Alterado2\\\", \\\"Data Limite Expedição\\\", \\\"Data Limite Expedição - Copiar\\\"),\\n    #\\\"Colunas Renomeadas2\\\" = Table.RenameColumns(#\\\"Coluna Duplicada\\\",{{\\\"Data Limite Expedição - Copiar\\\", \\\"data para a data\\\"}}),\\n    #\\\"Tipo Alterado10\\\" = Table.TransformColumnTypes(#\\\"Colunas Renomeadas2\\\",{{\\\"data para a data\\\", type date}}),\\n    #\\\"Personalização Adicionada2\\\" = Table.AddColumn(#\\\"Tipo Alterado10\\\", \\\"Data\\\", each if DateTime.From([data para a data]) <= Date.AddDays(DateTime.From(DateTime.LocalNow()), -1) then \\n    \\\"<=\\\" & Date.ToText(Date.AddDays(Date.From(DateTime.LocalNow()), -1), \\\"dd/MM\\\")\\nelse if DateTime.From([data para a data]) >= Date.AddDays(DateTime.From(DateTime.LocalNow()), 6) then \\n    \\\">=\\\" & Date.ToText(Date.AddDays(Date.From(DateTime.LocalNow()), 6), \\\"dd/MM\\\")\\nelse \\n    [data para a data]),\\n    #\\\"Tipo Alterado3\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada2\\\",{{\\\"Data\\\", type text}}),\\n    #\\\"Personalização Adicionada3\\\" = Table.AddColumn(#\\\"Tipo Alterado3\\\", \\\"Rota\\\", each if [BOX] <> 870 and [BOX] <> 872 and [BOX] <> 770 then \\\"BR\\\" else \\\"VVLOG\\\"),\\n    #\\\"Tipo Alterado4\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada3\\\",{{\\\"Rota\\\", type text}}),\\n    #\\\"Personalização Adicionada4\\\" = Table.AddColumn(#\\\"Tipo Alterado4\\\", \\\"Setor\\\", each if [Status oLPN] = \\\"Created\\\" then \\\"01_Picking\\\"\\nelse if [Status oLPN] = \\\"In Progress\\\" then \\\"01_Picking\\\"\\nelse if [Status oLPN] = \\\"Packing\\\" then \\\"02_Packing\\\"\\nelse if [Status oLPN] = \\\"Packed\\\" and [Numero da Gaiola] = \\\"\\\" then \\\"02_Packing\\\"\\nelse if [Status oLPN] = \\\"Packed\\\" then \\\"03_Expedição\\\"\\nelse if [Status oLPN] = \\\"Shipped\\\" then \\\"Expedido\\\"\\nelse \\\"Cancelado\\\"),\\n    #\\\"Tipo Alterado5\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada4\\\",{{\\\"Setor\\\", type text}}),\\n    #\\\"Personalização Adicionada5\\\" = Table.AddColumn(#\\\"Tipo Alterado5\\\", \\\"area\\\", each if Text.Start([Local de Picking], 2) = \\\"C0\\\" or \\n   Text.Start([Local de Picking], 2) = \\\"P0\\\" or \\n   Text.Start([Local de Picking], 2) = \\\"R0\\\" or \\n   Text.Middle([Local de Picking], 4, 3) = \\\"PAR\\\" then \\n    \\\"P.A.R.\\\" \\nelse \\n    \\\"SALÃO\\\"),\\n    #\\\"Tipo Alterado6\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada5\\\",{{\\\"area\\\", type text}, {\\\"Data do Pedido\\\", type datetime}}),\\n    #\\\"Personalização Adicionada6\\\" = Table.AddColumn(#\\\"Tipo Alterado6\\\", \\\"Atraso\\\", each if \\n    [Data Limite Expedição] <> null and DateTime.From([Data Limite Expedição]) < DateTime.LocalNow() and \\n    [status] <> \\\"Expedido\\\" and \\n    [status] <> \\\"Cancelado\\\" then \\n    if [Data do Pedido] <> null and DateTime.From([Data do Pedido]) > DateTime.From([Data Limite Expedição]) then \\n        \\\"INTEGRADO EM ATRASO\\\" \\n    else \\n        \\\"ATRASO\\\" \\nelse \\n    \\\"-\\\"),\\n    #\\\"Tipo Alterado7\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada6\\\",{{\\\"Atraso\\\", type text}}),\\n    #\\\"Personalização Adicionada7\\\" = Table.AddColumn(#\\\"Tipo Alterado7\\\", \\\"descricao_atividade\\\", each if [Status oLPN] = \\\"Shipped\\\" then \\\"09_Expedido\\\"\\nelse if [Status oLPN] = \\\"Created\\\" and [Tarefa Status] = null then \\\"01_Sem Tarefa\\\"\\nelse if [Status oLPN] = \\\"Created\\\" and [Tarefa Status] = \\\"Held\\\" then \\\"02_Held\\\"\\nelse if [Status oLPN] = \\\"Created\\\" and [Tarefa Status] = \\\"Ready For Assignment\\\" then \\\"03_Picking Liberado\\\"\\nelse if [Status oLPN] = \\\"Created\\\" and [Tarefa Status] = \\\"Assigned\\\" then \\\"04_Início de Picking\\\"\\nelse if [Status oLPN] = \\\"Created\\\" and ([Tarefa Status] = \\\"In Progress\\\" or [Tarefa Status] = \\\"Pending Complete\\\") then \\\"05_Em Separação\\\"\\nelse if [Status oLPN] = \\\"Created\\\" and [Tarefa Status] = \\\"Completed\\\" then \\\"06_Fim de Separação\\\"\\nelse if [Status oLPN] = \\\"Packed\\\" and [Numero da Gaiola] = null then \\\"07_Em Faturamento\\\"\\nelse if [Status oLPN] = \\\"Packed\\\" and [Numero da Gaiola] <> null then \\\"08_Em Expedição\\\"\\nelse if [Status oLPN] = \\\"Cancelled\\\" then \\\"10_Cancelado\\\"\\nelse null),\\n    #\\\"Tipo Alterado8\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada7\\\",{{\\\"descricao_atividade\\\", type text}}),\\n    #\\\"Linhas Filtradas1\\\" = Table.SelectRows(#\\\"Tipo Alterado8\\\", each true)\\nin\\n    #\\\"Linhas Filtradas1\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Transformar Arquivo (7)",
      "lineageTag": "f3ee5f8b-354d-46b7-aec6-fa892fc6b13e",
      "queryGroupId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = (Parâmetro1) => let",
        "        Fonte = Excel.Workbook(Parâmetro1, null, true),",
        "        page_Sheet = Fonte{[Item=\"page\",Kind=\"Sheet\"]}[Data],",
        "        #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(page_Sheet, [PromoteAllScalars=true])",
        "    in",
        "        #\"Cabeçalhos Promovidos\"",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "Arquivo de Amostra (7)",
      "lineageTag": "90fca528-b07c-4562-821c-8dedbb7d100b",
      "queryGroupId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62",
      "navigationStepName": "Navegação",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Packed - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Packed - ADMs - Vinicius & Almeida\"]}[Content],",
        "    Navegação1 = #\"Packed - ADMs - Vinicius & Almeida\"{0}[Content]",
        "in",
        "    Navegação1"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Arquivo de Amostra (8)",
      "lineageTag": "bd83a205-5d9f-4aea-9f02-9fa228ce3a20",
      "queryGroupId": "443d41b0-a49d-4038-8158-2f4e2a277387",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Status oLPN - ADMs - Vinicius & Almeida\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Status oLPN - ADMs - Vinicius & Almeida\"]}[Content],",
        "    Navegação1 = #\"Status oLPN - ADMs - Vinicius & Almeida\"{0}[Content]",
        "in",
        "    Navegação1"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Binary",
      "isHidden": false
    },
    {
      "name": "Parâmetro5",
      "lineageTag": "8f7c389f-3699-4d72-8a51-de76ca911ff3",
      "queryGroupId": "443d41b0-a49d-4038-8158-2f4e2a277387",
      "text": [
        "#\"Arquivo de Amostra (8)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Arquivo de Amostra (8)\", Type=\"Binary\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Binary",
      "isHidden": false
    },
    {
      "name": "Transformar o Arquivo de Exemplo (5)",
      "lineageTag": "ef51e042-806d-418d-80f2-3a0201ee024e",
      "queryGroupId": "cc987480-9a66-44fa-b4c0-0a05c432aa38",
      "text": [
        "let",
        "    Fonte = Csv.Document(Parâmetro5,[Delimiter=\"\t\", Columns=31, Encoding=1200, QuoteStyle=QuoteStyle.None]),",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true])",
        "in",
        "    #\"Cabeçalhos Promovidos\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Transformar Arquivo (8)",
      "lineageTag": "4a123f69-a26d-4755-96af-dfe6f1bbfc21",
      "queryGroupId": "443d41b0-a49d-4038-8158-2f4e2a277387",
      "text": [
        "let",
        "    Fonte = (Parâmetro5 as binary) => let",
        "    Fonte = Csv.Document(Parâmetro5,[Delimiter=\"\t\", Columns=31, Encoding=1200, QuoteStyle=QuoteStyle.None]),",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true])",
        "in",
        "    #\"Cabeçalhos Promovidos\"",
        "in",
        "    Fonte"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "tTempo",
      "lineageTag": "3d9a607e-477f-4e6f-b93a-937da8719779",
      "text": [
        "let",
        "    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [hora = _t]),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(Fonte,{{\"hora\", Int64.Type}}),",
        "    #\"Personalização Adicionada\" = Table.AddColumn(#\"Tipo Alterado\", \"hora_atual\", each Time.From(DateTime.LocalNow() - #duration(0, 3, 0, 0))),",
        "    #\"Tipo Alterado1\" = Table.TransformColumnTypes(#\"Personalização Adicionada\",{{\"hora_atual\", type time}}),",
        "    #\"Colunas Removidas\" = Table.RemoveColumns(#\"Tipo Alterado1\",{\"hora\"}),",
        "    #\"Personalização Adicionada1\" = Table.AddColumn(#\"Colunas Removidas\", \"data_atual\", each DateTime.Date(DateTime.LocalNow())),",
        "    #\"Tipo Alterado2\" = Table.TransformColumnTypes(#\"Personalização Adicionada1\",{{\"data_atual\", type date}})",
        "in",
        "    #\"Tipo Alterado2\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\\\"i45WMlSKjQUA\\\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [hora = _t]),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(Fonte,{{\\\"hora\\\", Int64.Type}}),\\n    #\\\"Personalização Adicionada\\\" = Table.AddColumn(#\\\"Tipo Alterado\\\", \\\"hora_atual\\\", each Time.From(DateTime.LocalNow() - #duration(0, 3, 0, 0))),\\n    #\\\"Tipo Alterado1\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada\\\",{{\\\"hora_atual\\\", type time}}),\\n    #\\\"Colunas Removidas\\\" = Table.RemoveColumns(#\\\"Tipo Alterado1\\\",{\\\"hora\\\"}),\\n    #\\\"Personalização Adicionada1\\\" = Table.AddColumn(#\\\"Colunas Removidas\\\", \\\"data_atual\\\", each DateTime.Date(DateTime.LocalNow())),\\n    #\\\"Tipo Alterado2\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada1\\\",{{\\\"data_atual\\\", type date}})\\nin\\n    #\\\"Tipo Alterado2\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "dTabela",
      "lineageTag": "68d57423-b0cb-42d2-8dfc-a999f7280d14",
      "text": [
        "let",
        "    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45Wck4sKknNLEpU0kEwY3WilYJSc1ITi1NTFHQVXHMVAopSCxKLEg8vP7w4H6gSjyRIr3NRamIJTDYYRSdOKVR9bpm5CimpOPVikQbpD0hMzgbKB+spuCdm5uckQmxxSywpLUrMTc0rARlCWA2SSc6oqlwrClJTMmHOIawmNhYA\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Status Fracionado\" = _t, #\"Status VVLOG\" = _t]),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(Fonte,{{\"Status Fracionado\", type text}, {\"Status VVLOG\", type text}}),",
        "    #\"Personalização Adicionada\" = Table.AddColumn(#\"Tipo Alterado\", \"seq\", each if [Status Fracionado] = \"Carteira\" then 1 else if [Status Fracionado] = \"Released - Em Preparação\" then 2 else if [Status Fracionado] = \"Created - Em Separação\" then 3 else if [Status Fracionado] = \"Created - Fim de Separação\" then 4 else if [Status Fracionado] = \"Packed S. Gaiola - Em Faturamento\" then 5 else if [Status Fracionado] = \"Packed C. Gaiola - Em Expedição\" then 6 else null),",
        "    #\"Tipo Alterado1\" = Table.TransformColumnTypes(#\"Personalização Adicionada\",{{\"seq\", Int64.Type}})",
        "in",
        "    #\"Tipo Alterado1\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\\\"i45Wck4sKknNLEpU0kEwY3WilYJSc1ITi1NTFHQVXHMVAopSCxKLEg8vP7w4H6gSjyRIr3NRamIJTDYYRSdOKVR9bpm5CimpOPVikQbpD0hMzgbKB+spuCdm5uckQmxxSywpLUrMTc0rARlCWA2SSc6oqlwrClJTMmHOIawmNhYA\\\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\\\"Status Fracionado\\\" = _t, #\\\"Status VVLOG\\\" = _t]),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(Fonte,{{\\\"Status Fracionado\\\", type text}, {\\\"Status VVLOG\\\", type text}}),\\n    #\\\"Personalização Adicionada\\\" = Table.AddColumn(#\\\"Tipo Alterado\\\", \\\"seq\\\", each if [Status Fracionado] = \\\"Carteira\\\" then 1 else if [Status Fracionado] = \\\"Released - Em Preparação\\\" then 2 else if [Status Fracionado] = \\\"Created - Em Separação\\\" then 3 else if [Status Fracionado] = \\\"Created - Fim de Separação\\\" then 4 else if [Status Fracionado] = \\\"Packed S. Gaiola - Em Faturamento\\\" then 5 else if [Status Fracionado] = \\\"Packed C. Gaiola - Em Expedição\\\" then 6 else null),\\n    #\\\"Tipo Alterado1\\\" = Table.TransformColumnTypes(#\\\"Personalização Adicionada\\\",{{\\\"seq\\\", Int64.Type}})\\nin\\n    #\\\"Tipo Alterado1\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "tDin_carteira",
      "lineageTag": "696bfad4-3fd6-44a5-8c5e-7ac021784827",
      "text": [
        "let",
        "    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"bdI7b8MgFAXgv4KYM/DwA0ZsU8tRCNYlQyorQ4aqY5cO/fm1Y04fCtuR7qdjX2BZuNWKH3iapTV2Cz6w4EfHKF4c47fDwqVQ4kGUUHoNfSTyU0x5qA2G7Rr8dSafknsMldH1PjTNVv5bfBwm9sVoBmsya0WBdT9tLZgstR3BDJgqsQRmwXSBzZRZJcCqAktdDyfhtp3D2/ud0cfnPbswZtaozOz/OqmEYMPkTnGMoBq0fqbJBc8G9wpbwTalWvKXfIhW5R/Yw9PaHkyDlU7npbvC1XB1wWEXi6vbwx92HlbW46u4uj2cIwV3Yh2tD/H2DQ==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [CÓDIGO = _t, ROTA = _t, #\"TIPO DE ENTREGA\" = _t]),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(Fonte,{{\"CÓDIGO\", Int64.Type}, {\"ROTA\", type text}, {\"TIPO DE ENTREGA\", type text}})",
        "in",
        "    #\"Tipo Alterado\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\\\"bdI7b8MgFAXgv4KYM/DwA0ZsU8tRCNYlQyorQ4aqY5cO/fm1Y04fCtuR7qdjX2BZuNWKH3iapTV2Cz6w4EfHKF4c47fDwqVQ4kGUUHoNfSTyU0x5qA2G7Rr8dSafknsMldH1PjTNVv5bfBwm9sVoBmsya0WBdT9tLZgstR3BDJgqsQRmwXSBzZRZJcCqAktdDyfhtp3D2/ud0cfnPbswZtaozOz/OqmEYMPkTnGMoBq0fqbJBc8G9wpbwTalWvKXfIhW5R/Yw9PaHkyDlU7npbvC1XB1wWEXi6vbwx92HlbW46u4uj2cIwV3Yh2tD/H2DQ==\\\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [CÓDIGO = _t, ROTA = _t, #\\\"TIPO DE ENTREGA\\\" = _t]),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(Fonte,{{\\\"CÓDIGO\\\", Int64.Type}, {\\\"ROTA\\\", type text}, {\\\"TIPO DE ENTREGA\\\", type text}})\\nin\\n    #\\\"Tipo Alterado\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "tDesmarcados",
      "lineageTag": "33c5d81b-7615-45f1-a17a-3e5951603f69",
      "text": [
        "let",
        "    Fonte = SharePoint.Contents(\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\", [ApiVersion = 15]),",
        "    #\"Atualizaes de Relatrios Gerais\" = Fonte{[Name=\"Atualizaes de Relatrios Gerais\"]}[Content],",
        "    #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\" = #\"Atualizaes de Relatrios Gerais\"{[Name=\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Relatórios rotativos\" = #\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\"{[Name=\"Relatórios rotativos\"]}[Content],",
        "    #\"Painel Online - ADMs - Vinicius & Almeida\" = #\"Relatórios rotativos\"{[Name=\"Painel Online - ADMs - Vinicius & Almeida\"]}[Content],",
        "    #\"Qtd Pedidos - Desmarcados\" = #\"Painel Online - ADMs - Vinicius & Almeida\"{[Name=\"Qtd Pedidos - Desmarcados\"]}[Content],",
        "    #\"Desmarcados - ADMs - Vinícius xlsx\" = #\"Qtd Pedidos - Desmarcados\"{[Name=\"Desmarcados - ADMs - Vinícius.xlsx\"]}[Content],",
        "    #\"Pasta de Trabalho Importada do Excel\" = Excel.Workbook(#\"Desmarcados - ADMs - Vinícius xlsx\"),",
        "    Preencher_Sheet = #\"Pasta de Trabalho Importada do Excel\"{[Item=\"Preencher\",Kind=\"Sheet\"]}[Data],",
        "    #\"Cabeçalhos Promovidos\" = Table.PromoteHeaders(Preencher_Sheet, [PromoteAllScalars=true]),",
        "    #\"Tipo Alterado\" = Table.TransformColumnTypes(#\"Cabeçalhos Promovidos\",{{\"Column0\", type text}, {\"Total VVLOG\", Int64.Type}, {\"Total Fracionado\", Int64.Type}})",
        "in",
        "    #\"Tipo Alterado\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Fonte = SharePoint.Contents(\\\"https://viavarejo.sharepoint.com/sites/grupo_de_dados_wave\\\", [ApiVersion = 15]),\\n    #\\\"Atualizaes de Relatrios Gerais\\\" = Fonte{[Name=\\\"Atualizaes de Relatrios Gerais\\\"]}[Content],\\n    #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\" = #\\\"Atualizaes de Relatrios Gerais\\\"{[Name=\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Relatórios rotativos\\\" = #\\\"Relatórios dinâmicos - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Relatórios rotativos\\\"]}[Content],\\n    #\\\"Painel Online - ADMs - Vinicius & Almeida\\\" = #\\\"Relatórios rotativos\\\"{[Name=\\\"Painel Online - ADMs - Vinicius & Almeida\\\"]}[Content],\\n    #\\\"Qtd Pedidos - Desmarcados\\\" = #\\\"Painel Online - ADMs - Vinicius & Almeida\\\"{[Name=\\\"Qtd Pedidos - Desmarcados\\\"]}[Content],\\n    #\\\"Desmarcados - ADMs - Vinícius xlsx\\\" = #\\\"Qtd Pedidos - Desmarcados\\\"{[Name=\\\"Desmarcados - ADMs - Vinícius.xlsx\\\"]}[Content],\\n    #\\\"Pasta de Trabalho Importada do Excel\\\" = Excel.Workbook(#\\\"Desmarcados - ADMs - Vinícius xlsx\\\"),\\n    Preencher_Sheet = #\\\"Pasta de Trabalho Importada do Excel\\\"{[Item=\\\"Preencher\\\",Kind=\\\"Sheet\\\"]}[Data],\\n    #\\\"Cabeçalhos Promovidos\\\" = Table.PromoteHeaders(Preencher_Sheet, [PromoteAllScalars=true]),\\n    #\\\"Tipo Alterado\\\" = Table.TransformColumnTypes(#\\\"Cabeçalhos Promovidos\\\",{{\\\"Column0\\\", type text}, {\\\"Total VVLOG\\\", Int64.Type}, {\\\"Total Fracionado\\\", Int64.Type}})\\nin\\n    #\\\"Tipo Alterado\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    }
  ],
  "queryGroups": [
    {
      "name": "Transformar Arquivo de Consulta1",
      "id": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62",
      "description": ""
    },
    {
      "name": "Consultas Auxiliares",
      "id": "0166ca11-99bc-4848-8374-ab87c01abf62",
      "description": "",
      "parentId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62"
    },
    {
      "name": "Transformar Arquivo de entrada",
      "id": "66f657e7-60cc-4e81-8993-a50dc7acc39a",
      "order": 1,
      "description": "",
      "parentId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62"
    },
    {
      "name": "Transformar Arquivo de carteira",
      "id": "9999e468-fcdd-40c0-8303-3740c8f82721",
      "order": 3,
      "description": "",
      "parentId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62"
    },
    {
      "name": "Transformar Arquivo de carteira (2)",
      "id": "074b4ed6-e3f7-4174-85fe-b77bdc174b46",
      "order": 2,
      "description": "",
      "parentId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62"
    },
    {
      "name": "Transformar Arquivo de status oLPN",
      "id": "cc987480-9a66-44fa-b4c0-0a05c432aa38",
      "order": 4,
      "description": "",
      "parentId": "7c3ee95b-dd1a-4435-9716-77fc9a14fb62"
    },
    {
      "name": "Consultas Auxiliares",
      "id": "e297bf89-cd04-43eb-b316-9d918185fa26",
      "description": "",
      "parentId": "66f657e7-60cc-4e81-8993-a50dc7acc39a"
    },
    {
      "name": "Consultas Auxiliares",
      "id": "72129429-b6bc-4fc0-be2b-5f174f240276",
      "description": "",
      "parentId": "9999e468-fcdd-40c0-8303-3740c8f82721"
    },
    {
      "name": "Consultas Auxiliares",
      "id": "8178989a-1b99-4d68-8eab-7a8015a4cbbf",
      "description": "",
      "parentId": "074b4ed6-e3f7-4174-85fe-b77bdc174b46"
    },
    {
      "name": "Consultas Auxiliares",
      "id": "443d41b0-a49d-4038-8158-2f4e2a277387",
      "description": "",
      "parentId": "cc987480-9a66-44fa-b4c0-0a05c432aa38"
    }
  ],
  "culture": "pt-BR",
  "firewallEnabled": true
}